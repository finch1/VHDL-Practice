--lpm_clshift CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" LPM_SHIFTTYPE="ARITHMETIC" LPM_WIDTH=7 LPM_WIDTHDIST=3 data direction distance result
--VERSION_BEGIN 13.1 cbx_lpm_clshift 2013:10:24:09:15:20:SJ cbx_mgl 2013:10:24:09:16:30:SJ  VERSION_END


-- Copyright (C) 1991-2013 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = 
SUBDESIGN lpm_clshift_usc
( 
	data[6..0]	:	input;
	direction	:	input;
	distance[2..0]	:	input;
	result[6..0]	:	output;
) 
VARIABLE 
	direction_w[0..0]	: WIRE;
	pad_left_w[3..0]	: WIRE;
	pad_right_w0w[1..0]	: WIRE;
	pad_right_w1w[2..0]	: WIRE;
	pad_right_w2w[4..0]	: WIRE;
	sbit_w[27..0]	: WIRE;

BEGIN 
	direction_w[] = ( direction);
	pad_left_w[] = B"0000";
	pad_right_w0w[] = ( sbit_w[6..6], sbit_w[6..6]);
	pad_right_w1w[] = ( sbit_w[13..13], sbit_w[13..13], sbit_w[13..13]);
	pad_right_w2w[] = ( sbit_w[20..20], sbit_w[20..20], sbit_w[20..20], sbit_w[20..20], sbit_w[20..20]);
	result[6..0] = sbit_w[27..21];
	sbit_w[] = ( ((((distance[2..2] & (! direction_w[])) & ( sbit_w[16..14], pad_left_w[3..0])) # ((distance[2..2] & direction_w[]) & ( pad_right_w2w[3..0], sbit_w[20..18]))) # ((! distance[2..2]) & sbit_w[20..14])), ((((distance[1..1] & (! direction_w[])) & ( sbit_w[11..7], pad_left_w[1..0])) # ((distance[1..1] & direction_w[]) & ( pad_right_w1w[1..0], sbit_w[13..9]))) # ((! distance[1..1]) & sbit_w[13..7])), ((((distance[0..0] & (! direction_w[])) & ( sbit_w[5..0], pad_left_w[0..0])) # ((distance[0..0] & direction_w[]) & ( pad_right_w0w[0..0], sbit_w[6..1]))) # ((! distance[0..0]) & sbit_w[6..0])), data[]);
END;
--VALID FILE

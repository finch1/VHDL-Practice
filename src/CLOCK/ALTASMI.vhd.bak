-- megafunction wizard: %ALTASMI_PARALLEL%
-- GENERATION: STANDARD
-- VERSION: WM1.0
-- MODULE: ALTASMI_PARALLEL 

-- ============================================================
-- File Name: ALTASMI.vhd
-- Megafunction Name(s):
-- 			ALTASMI_PARALLEL
--
-- Simulation Library Files(s):
-- 			
-- ============================================================
-- ************************************************************
-- THIS IS A WIZARD-GENERATED FILE. DO NOT EDIT THIS FILE!
--
-- 13.1.0 Build 162 10/23/2013 SJ Web Edition
-- ************************************************************


--Copyright (C) 1991-2013 Altera Corporation
--Your use of Altera Corporation's design tools, logic functions 
--and other software and tools, and its AMPP partner logic 
--functions, and any output files from any of the foregoing 
--(including device programming or simulation files), and any 
--associated documentation or information are expressly subject 
--to the terms and conditions of the Altera Program License 
--Subscription Agreement, Altera MegaCore Function License 
--Agreement, or other applicable license agreement, including, 
--without limitation, that your use is for the sole purpose of 
--programming logic devices manufactured by Altera and sold by 
--Altera or its authorized distributors.  Please refer to the 
--applicable agreement for further details.


--altasmi_parallel CBX_AUTO_BLACKBOX="ALL" DATA_WIDTH="STANDARD" DEVICE_FAMILY="Cyclone III" EPCS_TYPE="EPCS4" PAGE_SIZE=1 PORT_BULK_ERASE="PORT_UNUSED" PORT_DIE_ERASE="PORT_UNUSED" PORT_EN4B_ADDR="PORT_UNUSED" PORT_EX4B_ADDR="PORT_UNUSED" PORT_FAST_READ="PORT_UNUSED" PORT_ILLEGAL_ERASE="PORT_UNUSED" PORT_ILLEGAL_WRITE="PORT_USED" PORT_RDID_OUT="PORT_UNUSED" PORT_READ_ADDRESS="PORT_UNUSED" PORT_READ_DUMMYCLK="PORT_UNUSED" PORT_READ_RDID="PORT_UNUSED" PORT_READ_SID="PORT_UNUSED" PORT_READ_STATUS="PORT_UNUSED" PORT_SECTOR_ERASE="PORT_UNUSED" PORT_SECTOR_PROTECT="PORT_UNUSED" PORT_SHIFT_BYTES="PORT_UNUSED" PORT_WREN="PORT_USED" PORT_WRITE="PORT_USED" USE_ASMIBLOCK="ON" USE_EAB="ON" WRITE_DUMMY_CLK=0 addr busy clkin data_valid datain dataout illegal_write rden read reset wren write INTENDED_DEVICE_FAMILY="Cyclone III" ALTERA_INTERNAL_OPTIONS=SUPPRESS_DA_RULE_INTERNAL=C106
--VERSION_BEGIN 13.1 cbx_a_gray2bin 2013:10:24:09:15:20:SJ cbx_a_graycounter 2013:10:24:09:15:20:SJ cbx_altasmi_parallel 2013:10:24:09:15:20:SJ cbx_altdpram 2013:10:24:09:15:20:SJ cbx_altsyncram 2013:10:24:09:15:20:SJ cbx_arriav 2013:10:24:09:15:20:SJ cbx_cyclone 2013:10:24:09:15:20:SJ cbx_cycloneii 2013:10:24:09:15:20:SJ cbx_fifo_common 2013:10:24:09:15:20:SJ cbx_lpm_add_sub 2013:10:24:09:15:20:SJ cbx_lpm_compare 2013:10:24:09:15:20:SJ cbx_lpm_counter 2013:10:24:09:15:20:SJ cbx_lpm_decode 2013:10:24:09:15:20:SJ cbx_lpm_mux 2013:10:24:09:15:20:SJ cbx_mgl 2013:10:24:09:16:30:SJ cbx_nightfury 2013:10:24:09:15:19:SJ cbx_scfifo 2013:10:24:09:15:20:SJ cbx_stratix 2013:10:24:09:15:20:SJ cbx_stratixii 2013:10:24:09:15:20:SJ cbx_stratixiii 2013:10:24:09:15:20:SJ cbx_stratixv 2013:10:24:09:15:20:SJ cbx_util_mgl 2013:10:24:09:15:20:SJ  VERSION_END

 LIBRARY altera_mf;
 USE altera_mf.all;

 LIBRARY cycloneii;
 USE cycloneii.all;

--synthesis_resources = a_graycounter 4 cycloneii_asmiblock 1 lut 27 mux21 1 reg 96 
 LIBRARY ieee;
 USE ieee.std_logic_1164.all;

 ENTITY  ALTASMI_altasmi_parallel_3kj2 IS 
	 PORT 
	 ( 
		 addr	:	IN  STD_LOGIC_VECTOR (23 DOWNTO 0);
		 busy	:	OUT  STD_LOGIC;
		 clkin	:	IN  STD_LOGIC;
		 data_valid	:	OUT  STD_LOGIC;
		 datain	:	IN  STD_LOGIC_VECTOR (7 DOWNTO 0) := (OTHERS => '0');
		 dataout	:	OUT  STD_LOGIC_VECTOR (7 DOWNTO 0);
		 illegal_write	:	OUT  STD_LOGIC;
		 rden	:	IN  STD_LOGIC;
		 read	:	IN  STD_LOGIC := '0';
		 reset	:	IN  STD_LOGIC := '0';
		 wren	:	IN  STD_LOGIC := '1';
		 write	:	IN  STD_LOGIC := '0'
	 ); 
 END ALTASMI_altasmi_parallel_3kj2;

 ARCHITECTURE RTL OF ALTASMI_altasmi_parallel_3kj2 IS

	 ATTRIBUTE synthesis_clearbox : natural;
	 ATTRIBUTE synthesis_clearbox OF RTL : ARCHITECTURE IS 2;
	 ATTRIBUTE ALTERA_ATTRIBUTE : string;
	 ATTRIBUTE ALTERA_ATTRIBUTE OF RTL : ARCHITECTURE IS "SUPPRESS_DA_RULE_INTERNAL=C106";

	 SIGNAL  wire_addbyte_cntr_w_lg_w_q_range158w163w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_addbyte_cntr_w_lg_w_q_range161w162w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_addbyte_cntr_clk_en	:	STD_LOGIC;
	 SIGNAL  wire_stage_cntr_w157w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_addbyte_cntr_clock	:	STD_LOGIC;
	 SIGNAL  wire_addbyte_cntr_q	:	STD_LOGIC_VECTOR (2 DOWNTO 0);
	 SIGNAL  wire_addbyte_cntr_sclr	:	STD_LOGIC;
	 SIGNAL  wire_w_lg_end_operation100w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_addbyte_cntr_w_q_range161w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_addbyte_cntr_w_q_range158w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_gen_cntr_w_lg_w_q_range113w114w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_gen_cntr_w_lg_w_q_range111w112w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_gen_cntr_clk_en	:	STD_LOGIC;
	 SIGNAL  wire_w_lg_w_lg_w_lg_in_operation40w41w42w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_gen_cntr_q	:	STD_LOGIC_VECTOR (2 DOWNTO 0);
	 SIGNAL  wire_gen_cntr_sclr	:	STD_LOGIC;
	 SIGNAL  wire_w_lg_w_lg_end1_cyc_reg_in_wire43w44w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_gen_cntr_w_q_range111w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_gen_cntr_w_q_range113w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_stage_cntr_w_lg_w332w333w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_stage_cntr_w332w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_stage_cntr_w337w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_stage_cntr_w_lg_w_lg_w_lg_w_lg_w_q_range103w106w329w330w331w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_stage_cntr_w_lg_w_lg_w_lg_w_lg_w_q_range103w106w334w335w336w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_stage_cntr_w_lg_w_lg_w_lg_w_lg_w_q_range103w104w105w343w344w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_stage_cntr_w_lg_w_lg_w_lg_w_q_range103w108w420w421w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_stage_cntr_w_lg_w_lg_w_lg_w_q_range103w106w329w330w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_stage_cntr_w_lg_w_lg_w_lg_w_q_range103w106w354w355w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_stage_cntr_w_lg_w_lg_w_lg_w_q_range103w106w334w335w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_stage_cntr_w_lg_w_lg_w_lg_w_q_range103w104w105w343w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_stage_cntr_w_lg_w_lg_w_q_range103w108w420w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_stage_cntr_w_lg_w_lg_w_q_range103w106w329w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_stage_cntr_w_lg_w_lg_w_q_range103w106w354w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_stage_cntr_w_lg_w_lg_w_q_range103w106w334w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_stage_cntr_w_lg_w_lg_w_q_range103w106w154w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_stage_cntr_w_lg_w_lg_w_q_range103w106w327w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_stage_cntr_w_lg_w_lg_w_lg_w_lg_w_q_range102w107w133w134w135w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_stage_cntr_w_lg_w_lg_w_q_range102w107w133w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_stage_cntr_w_lg_w_lg_w_q_range103w104w105w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_stage_cntr_w_lg_w_q_range103w108w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_stage_cntr_w_lg_w_q_range103w106w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_stage_cntr_w_lg_w_lg_w_lg_w_q_range102w107w133w134w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_stage_cntr_w_lg_w_q_range102w107w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_stage_cntr_w_lg_w_q_range103w104w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_stage_cntr_clk_en	:	STD_LOGIC;
	 SIGNAL  wire_w_lg_w_lg_w_lg_w96w97w98w99w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_stage_cntr_q	:	STD_LOGIC_VECTOR (1 DOWNTO 0);
	 SIGNAL  wire_stage_cntr_sclr	:	STD_LOGIC;
	 SIGNAL  wire_stage_cntr_w_q_range102w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_stage_cntr_w_q_range103w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_wrstage_cntr_w_lg_w_q_range524w525w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_wrstage_cntr_w_lg_w_q_range522w523w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_wrstage_cntr_clk_en	:	STD_LOGIC;
	 SIGNAL  wire_w_lg_w_lg_w_lg_w_lg_w517w518w519w520w521w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_wrstage_cntr_clock	:	STD_LOGIC;
	 SIGNAL  wire_wrstage_cntr_q	:	STD_LOGIC_VECTOR (1 DOWNTO 0);
	 SIGNAL  wire_wrstage_cntr_w_q_range522w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_wrstage_cntr_w_q_range524w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_cycloneii_asmiblock2_data0out	:	STD_LOGIC;
	 SIGNAL  wire_cycloneii_asmiblock2_sdoin	:	STD_LOGIC;
	 SIGNAL  wire_w_lg_sdoin_wire320w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL	 add_msb_reg	:	STD_LOGIC
	 -- synopsys translate_off
	  := '0'
	 -- synopsys translate_on
	 ;
	 SIGNAL	 wire_add_msb_reg_ena	:	STD_LOGIC;
	 SIGNAL	 wire_addr_reg_d	:	STD_LOGIC_VECTOR (23 DOWNTO 0);
	 SIGNAL	 addr_reg	:	STD_LOGIC_VECTOR(23 DOWNTO 0)
	 -- synopsys translate_off
	  := (OTHERS => '0')
	 -- synopsys translate_on
	 ;
	 SIGNAL	 wire_addr_reg_ena	:	STD_LOGIC_VECTOR(23 DOWNTO 0);
	 SIGNAL  wire_addr_reg_w_q_range574w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_addr_reg_w_q_range581w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_addr_reg_w_q_range393w	:	STD_LOGIC_VECTOR (22 DOWNTO 0);
	 SIGNAL  wire_addr_reg_w_q_range586w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL	 wire_asmi_opcode_reg_d	:	STD_LOGIC_VECTOR (7 DOWNTO 0);
	 SIGNAL	 asmi_opcode_reg	:	STD_LOGIC_VECTOR(7 DOWNTO 0)
	 -- synopsys translate_off
	  := (OTHERS => '0')
	 -- synopsys translate_on
	 ;
	 SIGNAL	 wire_asmi_opcode_reg_ena	:	STD_LOGIC_VECTOR(7 DOWNTO 0);
	 SIGNAL  wire_asmi_opcode_reg_w_q_range168w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL	 busy_det_reg	:	STD_LOGIC
	 -- synopsys translate_off
	  := '0'
	 -- synopsys translate_on
	 ;
	 SIGNAL	 clr_read_reg	:	STD_LOGIC
	 -- synopsys translate_off
	  := '0'
	 -- synopsys translate_on
	 ;
	 SIGNAL	 clr_read_reg2	:	STD_LOGIC
	 -- synopsys translate_off
	  := '0'
	 -- synopsys translate_on
	 ;
	 SIGNAL	 clr_rstat_reg	:	STD_LOGIC
	 -- synopsys translate_off
	  := '0'
	 -- synopsys translate_on
	 ;
	 SIGNAL	 clr_write_reg	:	STD_LOGIC
	 -- synopsys translate_off
	  := '0'
	 -- synopsys translate_on
	 ;
	 SIGNAL	 clr_write_reg2	:	STD_LOGIC
	 -- synopsys translate_off
	  := '0'
	 -- synopsys translate_on
	 ;
	 SIGNAL	 wire_datain_reg_d	:	STD_LOGIC_VECTOR (7 DOWNTO 0);
	 SIGNAL	 datain_reg	:	STD_LOGIC_VECTOR(7 DOWNTO 0)
	 -- synopsys translate_off
	  := (OTHERS => '0')
	 -- synopsys translate_on
	 ;
	 SIGNAL	 wire_datain_reg_ena	:	STD_LOGIC_VECTOR(7 DOWNTO 0);
	 SIGNAL  wire_datain_reg_w_q_range614w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL	 do_wrmemadd_reg	:	STD_LOGIC
	 -- synopsys translate_off
	  := '0'
	 -- synopsys translate_on
	 ;
	 SIGNAL	 dvalid_reg	:	STD_LOGIC
	 -- synopsys translate_off
	  := '0'
	 -- synopsys translate_on
	 ;
	 SIGNAL	 wire_dvalid_reg_ena	:	STD_LOGIC;
	 SIGNAL	 wire_dvalid_reg_sclr	:	STD_LOGIC;
	 SIGNAL	 dvalid_reg2	:	STD_LOGIC
	 -- synopsys translate_off
	  := '0'
	 -- synopsys translate_on
	 ;
	 SIGNAL	 end1_cyc_reg	:	STD_LOGIC
	 -- synopsys translate_off
	  := '0'
	 -- synopsys translate_on
	 ;
	 SIGNAL	 end1_cyc_reg2	:	STD_LOGIC
	 -- synopsys translate_off
	  := '0'
	 -- synopsys translate_on
	 ;
	 SIGNAL	 end_op_hdlyreg	:	STD_LOGIC
	 -- synopsys translate_off
	  := '0'
	 -- synopsys translate_on
	 ;
	 SIGNAL	 end_op_reg	:	STD_LOGIC
	 -- synopsys translate_off
	  := '0'
	 -- synopsys translate_on
	 ;
	 SIGNAL	 end_rbyte_reg	:	STD_LOGIC
	 -- synopsys translate_off
	  := '0'
	 -- synopsys translate_on
	 ;
	 SIGNAL	 wire_end_rbyte_reg_ena	:	STD_LOGIC;
	 SIGNAL	 wire_end_rbyte_reg_sclr	:	STD_LOGIC;
	 SIGNAL	 end_read_reg	:	STD_LOGIC
	 -- synopsys translate_off
	  := '0'
	 -- synopsys translate_on
	 ;
	 SIGNAL	 ill_write_reg	:	STD_LOGIC
	 -- synopsys translate_off
	  := '0'
	 -- synopsys translate_on
	 ;
	 SIGNAL	 illegal_write_prot_reg	:	STD_LOGIC
	 -- synopsys translate_off
	  := '0'
	 -- synopsys translate_on
	 ;
	 SIGNAL	 ncs_reg	:	STD_LOGIC
	 -- synopsys translate_off
	  := '0'
	 -- synopsys translate_on
	 ;
	 SIGNAL	 wire_ncs_reg_sclr	:	STD_LOGIC;
	 SIGNAL  wire_ncs_reg_w_lg_q380w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL	 wire_read_data_reg_d	:	STD_LOGIC_VECTOR (7 DOWNTO 0);
	 SIGNAL	 read_data_reg	:	STD_LOGIC_VECTOR(7 DOWNTO 0)
	 -- synopsys translate_off
	  := (OTHERS => '0')
	 -- synopsys translate_on
	 ;
	 SIGNAL	 wire_read_data_reg_ena	:	STD_LOGIC_VECTOR(7 DOWNTO 0);
	 SIGNAL	 wire_read_dout_reg_d	:	STD_LOGIC_VECTOR (7 DOWNTO 0);
	 SIGNAL	 read_dout_reg	:	STD_LOGIC_VECTOR(7 DOWNTO 0)
	 -- synopsys translate_off
	  := (OTHERS => '0')
	 -- synopsys translate_on
	 ;
	 SIGNAL	 wire_read_dout_reg_ena	:	STD_LOGIC_VECTOR(7 DOWNTO 0);
	 SIGNAL	 read_reg	:	STD_LOGIC
	 -- synopsys translate_off
	  := '0'
	 -- synopsys translate_on
	 ;
	 SIGNAL	 wire_read_reg_ena	:	STD_LOGIC;
	 SIGNAL	 shift_op_reg	:	STD_LOGIC
	 -- synopsys translate_off
	  := '0'
	 -- synopsys translate_on
	 ;
	 SIGNAL	 stage2_reg	:	STD_LOGIC
	 -- synopsys translate_off
	  := '0'
	 -- synopsys translate_on
	 ;
	 SIGNAL	 stage3_dly_reg	:	STD_LOGIC
	 -- synopsys translate_off
	  := '0'
	 -- synopsys translate_on
	 ;
	 SIGNAL	 stage3_reg	:	STD_LOGIC
	 -- synopsys translate_off
	  := '0'
	 -- synopsys translate_on
	 ;
	 SIGNAL	 stage4_reg	:	STD_LOGIC
	 -- synopsys translate_off
	  := '0'
	 -- synopsys translate_on
	 ;
	 SIGNAL	 start_wrpoll_reg	:	STD_LOGIC
	 -- synopsys translate_off
	  := '0'
	 -- synopsys translate_on
	 ;
	 SIGNAL	 wire_start_wrpoll_reg_ena	:	STD_LOGIC;
	 SIGNAL	 start_wrpoll_reg2	:	STD_LOGIC
	 -- synopsys translate_off
	  := '0'
	 -- synopsys translate_on
	 ;
	 SIGNAL	 wire_statreg_int_d	:	STD_LOGIC_VECTOR (7 DOWNTO 0);
	 SIGNAL	 statreg_int	:	STD_LOGIC_VECTOR(7 DOWNTO 0)
	 -- synopsys translate_off
	  := (OTHERS => '0')
	 -- synopsys translate_on
	 ;
	 SIGNAL	 wire_statreg_int_ena	:	STD_LOGIC_VECTOR(7 DOWNTO 0);
	 SIGNAL	 write_prot_reg	:	STD_LOGIC
	 -- synopsys translate_off
	  := '0'
	 -- synopsys translate_on
	 ;
	 SIGNAL	 wire_write_prot_reg_ena	:	STD_LOGIC;
	 SIGNAL	 write_prot_reg2	:	STD_LOGIC
	 -- synopsys translate_off
	  := '0'
	 -- synopsys translate_on
	 ;
	 SIGNAL	 write_reg	:	STD_LOGIC
	 -- synopsys translate_off
	  := '0'
	 -- synopsys translate_on
	 ;
	 SIGNAL	 wire_write_reg_ena	:	STD_LOGIC;
	 SIGNAL	 write_rstat_reg	:	STD_LOGIC
	 -- synopsys translate_off
	  := '0'
	 -- synopsys translate_on
	 ;
	 SIGNAL	 wrsdoin_reg	:	STD_LOGIC
	 -- synopsys translate_off
	  := '0'
	 -- synopsys translate_on
	 ;
	 SIGNAL	wire_mux211_dataout	:	STD_LOGIC;
	 SIGNAL  wire_w_lg_w_lg_w655w656w657w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w655w656w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w287w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w227w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w285w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w220w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w655w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w477w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_w_lg_load_opcode184w185w186w271w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_w_lg_load_opcode184w185w186w187w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_w_lg_load_opcode189w190w191w273w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_w_lg_load_opcode189w190w191w192w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_w_lg_load_opcode223w224w225w226w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_w_lg_load_opcode194w195w196w275w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_w_lg_load_opcode194w195w196w197w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_w_lg_load_opcode235w236w237w293w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_w_lg_load_opcode235w236w237w238w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_w_lg_load_opcode216w217w218w219w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_w_lg_do_read359w360w361w362w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_w_lg_do_write651w652w653w654w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_w530w641w642w658w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_w_lg_do_read407w474w475w476w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_w_lg_do_sec_erase54w416w417w418w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_do_write628w629w630w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_load_opcode184w185w186w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_load_opcode189w190w191w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_load_opcode199w204w279w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_load_opcode199w204w205w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_load_opcode199w200w277w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_load_opcode199w200w201w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_load_opcode223w224w225w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_load_opcode194w195w196w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_load_opcode235w236w237w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_load_opcode216w217w218w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_bp2_wire547w548w549w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_bp2_wire547w548w552w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_bp2_wire547w554w555w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_bp2_wire547w554w557w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_do_read359w360w361w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_do_read359w360w419w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_do_write651w652w653w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w530w641w642w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_do_read407w474w475w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_do_sec_erase54w416w417w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_bp2_wire559w560w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_bp2_wire559w562w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_bp2_wire564w565w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_bp2_wire564w567w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_do_4baddr176w177w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_do_ex4baddr171w172w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_do_polling500w501w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_do_read_stat123w124w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_do_write207w208w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_do_write628w629w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_do_write63w338w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_load_opcode178w267w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_load_opcode178w179w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_load_opcode173w265w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_load_opcode173w174w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_load_opcode209w281w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_load_opcode209w210w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_load_opcode184w185w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_load_opcode189w190w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_load_opcode229w289w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_load_opcode229w230w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_load_opcode232w291w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_load_opcode232w233w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_load_opcode212w283w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_load_opcode212w213w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_load_opcode240w295w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_load_opcode240w241w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_load_opcode243w297w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_load_opcode243w244w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_load_opcode199w204w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_load_opcode199w200w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_load_opcode223w224w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_load_opcode194w195w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_load_opcode235w236w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_load_opcode181w269w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_load_opcode181w182w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_load_opcode216w217w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_stage3_wire45w46w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_start_poll345w346w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_bp2_wire547w548w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_bp2_wire547w554w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_do_read359w360w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_do_write651w652w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w517w518w519w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w530w641w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_w_lg_do_write72w116w117w516w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_w_lg_do_write72w116w117w130w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_do_write72w73w408w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_do_read407w474w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_do_read_rdid125w126w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_do_sec_erase54w416w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_end_operation502w503w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_rden_wire412w413w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_addr_overdie402w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_addr_overdie392w	:	STD_LOGIC_VECTOR (22 DOWNTO 0);
	 SIGNAL  wire_w_lg_bp2_wire559w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_bp2_wire564w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_do_4baddr176w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_do_bulk_erase339w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_do_ex4baddr171w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_do_polling500w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_do_read_nonvolatile325w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_do_read_stat123w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_do_write207w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_do_write628w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_do_write70w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_do_write63w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_load_opcode178w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_load_opcode173w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_load_opcode209w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_load_opcode184w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_load_opcode189w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_load_opcode229w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_load_opcode232w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_load_opcode212w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_load_opcode240w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_load_opcode243w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_load_opcode199w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_load_opcode223w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_load_opcode194w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_load_opcode235w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_load_opcode181w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_load_opcode216w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_not_busy404w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_not_busy396w	:	STD_LOGIC_VECTOR (22 DOWNTO 0);
	 SIGNAL  wire_w_lg_not_busy622w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_not_busy617w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_lg_shift_opcode169w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_lg_stage3_wire410w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_stage3_wire441w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_stage3_wire55w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_stage3_wire45w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_stage3_wire394w	:	STD_LOGIC_VECTOR (22 DOWNTO 0);
	 SIGNAL  wire_w_lg_stage4_wire443w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_stage4_wire411w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_stage4_wire615w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_lg_start_poll345w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_wren_wire631w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_mask_prot_range568w575w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_mask_prot_range571w582w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_mask_prot_range573w587w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_do_write63w357w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w119w120w121w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_addr_overdie490w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_bp0_wire545w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_bp1_wire546w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_bp2_wire547w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_busy_wire1w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_clkin_wire101w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_do_4baddr647w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_do_bulk_erase649w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_do_die_erase648w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_do_ex4baddr646w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_do_fast_read358w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_do_memadd425w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_do_polling203w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_do_read359w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_do_read_rdid51w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_do_read_stat52w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_do_read_volatile215w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_do_sec_erase650w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_do_wren53w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_do_write651w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_do_write_rstat627w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_do_write_volatile222w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_end_add_cycle83w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_end_fast_read77w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_end_ophdly39w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_end_pgwr_data62w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_end_read80w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_rden_wire492w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_read_rdid_wire9w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_read_sid_wire8w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_sec_protect_wire7w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_st_busy_wire127w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_start_poll122w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_write_prot_true515w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_write_wire17w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_pagewr_buf_not_empty_range68w69w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_w_lg_w530w641w642w658w659w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_load_opcode243w297w298w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_load_opcode243w244w245w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w517w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_w_lg_do_write72w73w408w409w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_end_operation502w503w504w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_rden_wire412w413w414w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_not_busy404w405w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_not_busy396w397w	:	STD_LOGIC_VECTOR (22 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_not_busy617w618w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_stage4_wire443w444w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_wren_wire631w632w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_w_lg_load_opcode243w297w298w299w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_w_lg_load_opcode243w244w245w246w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_lg_w517w518w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_w_lg_rden_wire412w413w414w415w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_not_busy396w397w398w	:	STD_LOGIC_VECTOR (22 DOWNTO 0);
	 SIGNAL  wire_w300w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w247w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_lg_w300w301w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w247w248w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w300w301w302w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w247w248w249w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_w300w301w302w303w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_w247w248w249w250w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_w_lg_w300w301w302w303w304w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_w_lg_w247w248w249w250w251w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_w_lg_w_lg_w300w301w302w303w304w305w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_w_lg_w_lg_w247w248w249w250w251w252w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w306w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w253w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_lg_w306w307w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w253w254w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w306w307w308w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w253w254w255w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_w306w307w308w309w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_w253w254w255w256w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_w_lg_w306w307w308w309w310w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_w_lg_w253w254w255w256w257w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_w_lg_w_lg_w306w307w308w309w310w311w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_w_lg_w_lg_w253w254w255w256w257w258w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w312w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w259w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_lg_w312w313w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w259w260w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w259w260w261w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w151w152w153w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w151w152w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w119w120w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w151w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w530w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w119w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_w_lg_do_read407w428w429w430w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_w_lg_do_read_sid147w148w149w150w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_w_lg_do_write72w116w117w529w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_w_lg_do_write72w116w117w118w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_bp3_wire539w540w541w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_do_read407w428w429w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_do_read_sid147w148w149w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_do_read_stat438w439w440w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_do_sec_erase532w533w534w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_lg_do_write72w116w117w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_bp3_wire539w540w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_do_read407w442w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_do_read407w428w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_do_read_sid147w148w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_do_read_stat438w439w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_do_sec_erase532w533w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_do_write72w116w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_do_write72w73w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_lg_w_prot_wire_range551w570w572w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_bp3_wire539w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_data0out_wire446w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_do_4baddr341w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_do_ex4baddr340w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_do_read407w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_do_read_rdid125w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_do_read_sid147w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_do_read_stat438w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_do_sec_erase54w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_do_sec_erase532w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_do_wren342w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_do_write72w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_end_operation502w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_load_opcode315w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_rden_wire412w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_mask_prot_add_range583w597w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_mask_prot_add_range588w601w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_mask_prot_check_range585w595w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_mask_prot_check_range590w599w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_prot_wire_range551w570w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_mask_prot_range568w578w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_mask_prot_range571w584w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_lg_w_mask_prot_range573w589w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  addr_overdie :	STD_LOGIC;
	 SIGNAL  addr_overdie_pos :	STD_LOGIC;
	 SIGNAL  addr_reg_overdie :	STD_LOGIC_VECTOR (23 DOWNTO 0);
	 SIGNAL  b4addr_opcode :	STD_LOGIC_VECTOR (7 DOWNTO 0);
	 SIGNAL  be_write_prot :	STD_LOGIC;
	 SIGNAL  berase_opcode :	STD_LOGIC_VECTOR (7 DOWNTO 0);
	 SIGNAL  bp0_wire :	STD_LOGIC;
	 SIGNAL  bp1_wire :	STD_LOGIC;
	 SIGNAL  bp2_wire :	STD_LOGIC;
	 SIGNAL  bp3_wire :	STD_LOGIC;
	 SIGNAL  busy_wire :	STD_LOGIC;
	 SIGNAL  clkin_wire :	STD_LOGIC;
	 SIGNAL  clr_addmsb_wire :	STD_LOGIC;
	 SIGNAL  clr_endrbyte_wire :	STD_LOGIC;
	 SIGNAL  clr_read_wire :	STD_LOGIC;
	 SIGNAL  clr_read_wire2 :	STD_LOGIC;
	 SIGNAL  clr_rstat_wire :	STD_LOGIC;
	 SIGNAL  clr_write_wire :	STD_LOGIC;
	 SIGNAL  clr_write_wire2 :	STD_LOGIC;
	 SIGNAL  data0out_wire :	STD_LOGIC;
	 SIGNAL  data_valid_wire :	STD_LOGIC;
	 SIGNAL  datain_reg_wire_in :	STD_LOGIC_VECTOR (7 DOWNTO 0);
	 SIGNAL  datain_wire :	STD_LOGIC_VECTOR (3 DOWNTO 0);
	 SIGNAL  dataout_wire :	STD_LOGIC_VECTOR (3 DOWNTO 0);
	 SIGNAL  derase_opcode :	STD_LOGIC_VECTOR (7 DOWNTO 0);
	 SIGNAL  do_4baddr :	STD_LOGIC;
	 SIGNAL  do_bulk_erase :	STD_LOGIC;
	 SIGNAL  do_die_erase :	STD_LOGIC;
	 SIGNAL  do_ex4baddr :	STD_LOGIC;
	 SIGNAL  do_fast_read :	STD_LOGIC;
	 SIGNAL  do_fread_epcq :	STD_LOGIC;
	 SIGNAL  do_freadwrv_polling :	STD_LOGIC;
	 SIGNAL  do_memadd :	STD_LOGIC;
	 SIGNAL  do_polling :	STD_LOGIC;
	 SIGNAL  do_read :	STD_LOGIC;
	 SIGNAL  do_read_nonvolatile :	STD_LOGIC;
	 SIGNAL  do_read_rdid :	STD_LOGIC;
	 SIGNAL  do_read_sid :	STD_LOGIC;
	 SIGNAL  do_read_stat :	STD_LOGIC;
	 SIGNAL  do_read_volatile :	STD_LOGIC;
	 SIGNAL  do_sec_erase :	STD_LOGIC;
	 SIGNAL  do_sec_prot :	STD_LOGIC;
	 SIGNAL  do_secprot_wren :	STD_LOGIC;
	 SIGNAL  do_sprot_polling :	STD_LOGIC;
	 SIGNAL  do_sprot_rstat :	STD_LOGIC;
	 SIGNAL  do_wait_dummyclk :	STD_LOGIC;
	 SIGNAL  do_wren :	STD_LOGIC;
	 SIGNAL  do_write :	STD_LOGIC;
	 SIGNAL  do_write_polling :	STD_LOGIC;
	 SIGNAL  do_write_rstat :	STD_LOGIC;
	 SIGNAL  do_write_volatile :	STD_LOGIC;
	 SIGNAL  do_write_volatile_rstat :	STD_LOGIC;
	 SIGNAL  do_write_volatile_wren :	STD_LOGIC;
	 SIGNAL  do_write_wren :	STD_LOGIC;
	 SIGNAL  end1_cyc_gen_cntr_wire :	STD_LOGIC;
	 SIGNAL  end1_cyc_normal_in_wire :	STD_LOGIC;
	 SIGNAL  end1_cyc_reg_in_wire :	STD_LOGIC;
	 SIGNAL  end_add_cycle :	STD_LOGIC;
	 SIGNAL  end_add_cycle_mux_datab_wire :	STD_LOGIC;
	 SIGNAL  end_fast_read :	STD_LOGIC;
	 SIGNAL  end_one_cyc_pos :	STD_LOGIC;
	 SIGNAL  end_one_cycle :	STD_LOGIC;
	 SIGNAL  end_op_wire :	STD_LOGIC;
	 SIGNAL  end_operation :	STD_LOGIC;
	 SIGNAL  end_ophdly :	STD_LOGIC;
	 SIGNAL  end_pgwr_data :	STD_LOGIC;
	 SIGNAL  end_read :	STD_LOGIC;
	 SIGNAL  end_read_byte :	STD_LOGIC;
	 SIGNAL  end_wrstage :	STD_LOGIC;
	 SIGNAL  exb4addr_opcode :	STD_LOGIC_VECTOR (7 DOWNTO 0);
	 SIGNAL  fast_read_opcode :	STD_LOGIC_VECTOR (7 DOWNTO 0);
	 SIGNAL  fast_read_wire :	STD_LOGIC;
	 SIGNAL  freadwrv_sdoin :	STD_LOGIC;
	 SIGNAL  ill_write_wire :	STD_LOGIC;
	 SIGNAL  illegal_write_b4out_wire :	STD_LOGIC;
	 SIGNAL  illegal_write_prot :	STD_LOGIC;
	 SIGNAL  in_operation :	STD_LOGIC;
	 SIGNAL  load_opcode :	STD_LOGIC;
	 SIGNAL  mask_prot :	STD_LOGIC_VECTOR (2 DOWNTO 0);
	 SIGNAL  mask_prot_add :	STD_LOGIC_VECTOR (2 DOWNTO 0);
	 SIGNAL  mask_prot_check :	STD_LOGIC_VECTOR (2 DOWNTO 0);
	 SIGNAL  mask_prot_comp_ntb :	STD_LOGIC_VECTOR (2 DOWNTO 0);
	 SIGNAL  mask_prot_comp_tb :	STD_LOGIC_VECTOR (2 DOWNTO 0);
	 SIGNAL  memadd_sdoin :	STD_LOGIC;
	 SIGNAL  ncs_reg_ena_wire :	STD_LOGIC;
	 SIGNAL  not_busy :	STD_LOGIC;
	 SIGNAL  oe_wire :	STD_LOGIC;
	 SIGNAL  pagewr_buf_not_empty :	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  prot_wire :	STD_LOGIC_VECTOR (7 DOWNTO 0);
	 SIGNAL  rden_wire :	STD_LOGIC;
	 SIGNAL  rdid_opcode :	STD_LOGIC_VECTOR (7 DOWNTO 0);
	 SIGNAL  rdummyclk_opcode :	STD_LOGIC_VECTOR (7 DOWNTO 0);
	 SIGNAL  read_data_reg_in_wire :	STD_LOGIC_VECTOR (7 DOWNTO 0);
	 SIGNAL  read_opcode :	STD_LOGIC_VECTOR (7 DOWNTO 0);
	 SIGNAL  read_rdid_wire :	STD_LOGIC;
	 SIGNAL  read_sid_wire :	STD_LOGIC;
	 SIGNAL  read_status_wire :	STD_LOGIC;
	 SIGNAL  read_wire :	STD_LOGIC;
	 SIGNAL  rflagstat_opcode :	STD_LOGIC_VECTOR (7 DOWNTO 0);
	 SIGNAL  rnvdummyclk_opcode :	STD_LOGIC_VECTOR (7 DOWNTO 0);
	 SIGNAL  rsid_opcode :	STD_LOGIC_VECTOR (7 DOWNTO 0);
	 SIGNAL  rsid_sdoin :	STD_LOGIC;
	 SIGNAL  rstat_opcode :	STD_LOGIC_VECTOR (7 DOWNTO 0);
	 SIGNAL  scein_wire :	STD_LOGIC;
	 SIGNAL  sdoin_wire :	STD_LOGIC;
	 SIGNAL  sec_protect_wire :	STD_LOGIC;
	 SIGNAL  secprot_opcode :	STD_LOGIC_VECTOR (7 DOWNTO 0);
	 SIGNAL  secprot_sdoin :	STD_LOGIC;
	 SIGNAL  serase_opcode :	STD_LOGIC_VECTOR (7 DOWNTO 0);
	 SIGNAL  shift_opcode :	STD_LOGIC;
	 SIGNAL  shift_opdata :	STD_LOGIC;
	 SIGNAL  shift_pgwr_data :	STD_LOGIC;
	 SIGNAL  st_busy_wire :	STD_LOGIC;
	 SIGNAL  stage2_wire :	STD_LOGIC;
	 SIGNAL  stage3_wire :	STD_LOGIC;
	 SIGNAL  stage4_wire :	STD_LOGIC;
	 SIGNAL  start_frpoll :	STD_LOGIC;
	 SIGNAL  start_poll :	STD_LOGIC;
	 SIGNAL  start_sppoll :	STD_LOGIC;
	 SIGNAL  start_wrpoll :	STD_LOGIC;
	 SIGNAL  to_sdoin_wire :	STD_LOGIC;
	 SIGNAL  wren_opcode :	STD_LOGIC_VECTOR (7 DOWNTO 0);
	 SIGNAL  wren_wire :	STD_LOGIC;
	 SIGNAL  write_opcode :	STD_LOGIC_VECTOR (7 DOWNTO 0);
	 SIGNAL  write_prot_true :	STD_LOGIC;
	 SIGNAL  write_prot_true2 :	STD_LOGIC;
	 SIGNAL  write_sdoin :	STD_LOGIC;
	 SIGNAL  write_wire :	STD_LOGIC;
	 SIGNAL  wrvolatile_opcode :	STD_LOGIC_VECTOR (7 DOWNTO 0);
	 SIGNAL  wire_w_addr_range403w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_addr_range395w	:	STD_LOGIC_VECTOR (22 DOWNTO 0);
	 SIGNAL  wire_w_addr_reg_overdie_range401w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_addr_reg_overdie_range391w	:	STD_LOGIC_VECTOR (22 DOWNTO 0);
	 SIGNAL  wire_w_b4addr_opcode_range266w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_b4addr_opcode_range175w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_berase_opcode_range270w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_berase_opcode_range183w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_datain_range621w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_datain_range616w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_dataout_wire_range445w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_derase_opcode_range272w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_derase_opcode_range188w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_exb4addr_opcode_range264w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_exb4addr_opcode_range170w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_fast_read_opcode_range288w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_fast_read_opcode_range228w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_mask_prot_range568w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_mask_prot_range571w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_mask_prot_range573w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_mask_prot_add_range576w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_mask_prot_add_range583w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_mask_prot_add_range588w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_mask_prot_check_range585w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_mask_prot_check_range590w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_mask_prot_comp_ntb_range591w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_mask_prot_comp_ntb_range596w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_mask_prot_comp_tb_range593w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_mask_prot_comp_tb_range598w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_pagewr_buf_not_empty_range68w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_prot_wire_range551w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_prot_wire_range553w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_prot_wire_range556w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_rdid_opcode_range294w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_rdid_opcode_range239w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_rdummyclk_opcode_range286w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_rdummyclk_opcode_range221w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_read_opcode_range290w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_read_opcode_range231w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_rflagstat_opcode_range276w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_rflagstat_opcode_range198w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_rnvdummyclk_opcode_range282w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_rnvdummyclk_opcode_range211w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_rsid_opcode_range296w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_rsid_opcode_range242w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_rstat_opcode_range278w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_rstat_opcode_range202w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_secprot_opcode_range292w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_secprot_opcode_range234w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_serase_opcode_range274w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_serase_opcode_range193w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_wren_opcode_range268w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_wren_opcode_range180w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_write_opcode_range280w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_write_opcode_range206w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 SIGNAL  wire_w_wrvolatile_opcode_range284w	:	STD_LOGIC_VECTOR (0 DOWNTO 0);
	 SIGNAL  wire_w_wrvolatile_opcode_range214w	:	STD_LOGIC_VECTOR (6 DOWNTO 0);
	 COMPONENT  a_graycounter
	 GENERIC 
	 (
		PVALUE	:	NATURAL := 0;
		WIDTH	:	NATURAL := 8;
		lpm_type	:	STRING := "a_graycounter"
	 );
	 PORT
	 ( 
		aclr	:	IN STD_LOGIC := '0';
		clk_en	:	IN STD_LOGIC := '1';
		clock	:	IN STD_LOGIC;
		cnt_en	:	IN STD_LOGIC := '1';
		q	:	OUT STD_LOGIC_VECTOR(width-1 DOWNTO 0);
		qbin	:	OUT STD_LOGIC_VECTOR(width-1 DOWNTO 0);
		sclr	:	IN STD_LOGIC := '0';
		updown	:	IN STD_LOGIC := '1'
	 ); 
	 END COMPONENT;
	 COMPONENT  cycloneii_asmiblock
	 PORT
	 ( 
		data0out	:	OUT STD_LOGIC;
		dclkin	:	IN STD_LOGIC;
		oe	:	IN STD_LOGIC := '1';
		scein	:	IN STD_LOGIC;
		sdoin	:	IN STD_LOGIC
	 ); 
	 END COMPONENT;
 BEGIN

	wire_w_lg_w_lg_w655w656w657w(0) <= wire_w_lg_w655w656w(0) AND end_operation;
	wire_w_lg_w655w656w(0) <= wire_w655w(0) AND wire_w_lg_do_ex4baddr646w(0);
	wire_w287w(0) <= wire_w_lg_w_lg_w_lg_w_lg_load_opcode223w224w225w226w(0) AND wire_w_rdummyclk_opcode_range286w(0);
	loop0 : FOR i IN 0 TO 6 GENERATE 
		wire_w227w(i) <= wire_w_lg_w_lg_w_lg_w_lg_load_opcode223w224w225w226w(0) AND wire_w_rdummyclk_opcode_range221w(i);
	END GENERATE loop0;
	wire_w285w(0) <= wire_w_lg_w_lg_w_lg_w_lg_load_opcode216w217w218w219w(0) AND wire_w_wrvolatile_opcode_range284w(0);
	loop1 : FOR i IN 0 TO 6 GENERATE 
		wire_w220w(i) <= wire_w_lg_w_lg_w_lg_w_lg_load_opcode216w217w218w219w(0) AND wire_w_wrvolatile_opcode_range214w(i);
	END GENERATE loop1;
	wire_w655w(0) <= wire_w_lg_w_lg_w_lg_w_lg_do_write651w652w653w654w(0) AND wire_w_lg_do_4baddr647w(0);
	wire_w477w(0) <= wire_w_lg_w_lg_w_lg_w_lg_do_read407w474w475w476w(0) AND end_read_byte;
	wire_w_lg_w_lg_w_lg_w_lg_load_opcode184w185w186w271w(0) <= wire_w_lg_w_lg_w_lg_load_opcode184w185w186w(0) AND wire_w_berase_opcode_range270w(0);
	loop2 : FOR i IN 0 TO 6 GENERATE 
		wire_w_lg_w_lg_w_lg_w_lg_load_opcode184w185w186w187w(i) <= wire_w_lg_w_lg_w_lg_load_opcode184w185w186w(0) AND wire_w_berase_opcode_range183w(i);
	END GENERATE loop2;
	wire_w_lg_w_lg_w_lg_w_lg_load_opcode189w190w191w273w(0) <= wire_w_lg_w_lg_w_lg_load_opcode189w190w191w(0) AND wire_w_derase_opcode_range272w(0);
	loop3 : FOR i IN 0 TO 6 GENERATE 
		wire_w_lg_w_lg_w_lg_w_lg_load_opcode189w190w191w192w(i) <= wire_w_lg_w_lg_w_lg_load_opcode189w190w191w(0) AND wire_w_derase_opcode_range188w(i);
	END GENERATE loop3;
	wire_w_lg_w_lg_w_lg_w_lg_load_opcode223w224w225w226w(0) <= wire_w_lg_w_lg_w_lg_load_opcode223w224w225w(0) AND wire_w_lg_do_read_stat52w(0);
	wire_w_lg_w_lg_w_lg_w_lg_load_opcode194w195w196w275w(0) <= wire_w_lg_w_lg_w_lg_load_opcode194w195w196w(0) AND wire_w_serase_opcode_range274w(0);
	loop4 : FOR i IN 0 TO 6 GENERATE 
		wire_w_lg_w_lg_w_lg_w_lg_load_opcode194w195w196w197w(i) <= wire_w_lg_w_lg_w_lg_load_opcode194w195w196w(0) AND wire_w_serase_opcode_range193w(i);
	END GENERATE loop4;
	wire_w_lg_w_lg_w_lg_w_lg_load_opcode235w236w237w293w(0) <= wire_w_lg_w_lg_w_lg_load_opcode235w236w237w(0) AND wire_w_secprot_opcode_range292w(0);
	loop5 : FOR i IN 0 TO 6 GENERATE 
		wire_w_lg_w_lg_w_lg_w_lg_load_opcode235w236w237w238w(i) <= wire_w_lg_w_lg_w_lg_load_opcode235w236w237w(0) AND wire_w_secprot_opcode_range234w(i);
	END GENERATE loop5;
	wire_w_lg_w_lg_w_lg_w_lg_load_opcode216w217w218w219w(0) <= wire_w_lg_w_lg_w_lg_load_opcode216w217w218w(0) AND wire_w_lg_do_read_stat52w(0);
	wire_w_lg_w_lg_w_lg_w_lg_do_read359w360w361w362w(0) <= wire_w_lg_w_lg_w_lg_do_read359w360w361w(0) AND end_one_cycle;
	wire_w_lg_w_lg_w_lg_w_lg_do_write651w652w653w654w(0) <= wire_w_lg_w_lg_w_lg_do_write651w652w653w(0) AND wire_w_lg_do_die_erase648w(0);
	wire_w_lg_w_lg_w_lg_w530w641w642w658w(0) <= wire_w_lg_w_lg_w530w641w642w(0) AND end_operation;
	wire_w_lg_w_lg_w_lg_w_lg_do_read407w474w475w476w(0) <= wire_w_lg_w_lg_w_lg_do_read407w474w475w(0) AND end_one_cyc_pos;
	wire_w_lg_w_lg_w_lg_w_lg_do_sec_erase54w416w417w418w(0) <= wire_w_lg_w_lg_w_lg_do_sec_erase54w416w417w(0) AND end_operation;
	wire_w_lg_w_lg_w_lg_do_write628w629w630w(0) <= wire_w_lg_w_lg_do_write628w629w(0) AND stage4_wire;
	wire_w_lg_w_lg_w_lg_load_opcode184w185w186w(0) <= wire_w_lg_w_lg_load_opcode184w185w(0) AND wire_w_lg_do_read_stat52w(0);
	wire_w_lg_w_lg_w_lg_load_opcode189w190w191w(0) <= wire_w_lg_w_lg_load_opcode189w190w(0) AND wire_w_lg_do_read_stat52w(0);
	wire_w_lg_w_lg_w_lg_load_opcode199w204w279w(0) <= wire_w_lg_w_lg_load_opcode199w204w(0) AND wire_w_rstat_opcode_range278w(0);
	loop6 : FOR i IN 0 TO 6 GENERATE 
		wire_w_lg_w_lg_w_lg_load_opcode199w204w205w(i) <= wire_w_lg_w_lg_load_opcode199w204w(0) AND wire_w_rstat_opcode_range202w(i);
	END GENERATE loop6;
	wire_w_lg_w_lg_w_lg_load_opcode199w200w277w(0) <= wire_w_lg_w_lg_load_opcode199w200w(0) AND wire_w_rflagstat_opcode_range276w(0);
	loop7 : FOR i IN 0 TO 6 GENERATE 
		wire_w_lg_w_lg_w_lg_load_opcode199w200w201w(i) <= wire_w_lg_w_lg_load_opcode199w200w(0) AND wire_w_rflagstat_opcode_range198w(i);
	END GENERATE loop7;
	wire_w_lg_w_lg_w_lg_load_opcode223w224w225w(0) <= wire_w_lg_w_lg_load_opcode223w224w(0) AND wire_w_lg_do_wren53w(0);
	wire_w_lg_w_lg_w_lg_load_opcode194w195w196w(0) <= wire_w_lg_w_lg_load_opcode194w195w(0) AND wire_w_lg_do_read_stat52w(0);
	wire_w_lg_w_lg_w_lg_load_opcode235w236w237w(0) <= wire_w_lg_w_lg_load_opcode235w236w(0) AND wire_w_lg_do_read_stat52w(0);
	wire_w_lg_w_lg_w_lg_load_opcode216w217w218w(0) <= wire_w_lg_w_lg_load_opcode216w217w(0) AND wire_w_lg_do_wren53w(0);
	wire_w_lg_w_lg_w_lg_bp2_wire547w548w549w(0) <= wire_w_lg_w_lg_bp2_wire547w548w(0) AND wire_w_lg_bp0_wire545w(0);
	wire_w_lg_w_lg_w_lg_bp2_wire547w548w552w(0) <= wire_w_lg_w_lg_bp2_wire547w548w(0) AND bp0_wire;
	wire_w_lg_w_lg_w_lg_bp2_wire547w554w555w(0) <= wire_w_lg_w_lg_bp2_wire547w554w(0) AND wire_w_lg_bp0_wire545w(0);
	wire_w_lg_w_lg_w_lg_bp2_wire547w554w557w(0) <= wire_w_lg_w_lg_bp2_wire547w554w(0) AND bp0_wire;
	wire_w_lg_w_lg_w_lg_do_read359w360w361w(0) <= wire_w_lg_w_lg_do_read359w360w(0) AND wire_w_lg_w_lg_do_write63w357w(0);
	wire_w_lg_w_lg_w_lg_do_read359w360w419w(0) <= wire_w_lg_w_lg_do_read359w360w(0) AND clr_write_wire2;
	wire_w_lg_w_lg_w_lg_do_write651w652w653w(0) <= wire_w_lg_w_lg_do_write651w652w(0) AND wire_w_lg_do_bulk_erase649w(0);
	wire_w_lg_w_lg_w530w641w642w(0) <= wire_w_lg_w530w641w(0) AND wire_wrstage_cntr_w_lg_w_q_range522w523w(0);
	wire_w_lg_w_lg_w_lg_do_read407w474w475w(0) <= wire_w_lg_w_lg_do_read407w474w(0) AND wire_stage_cntr_w_lg_w_q_range102w107w(0);
	wire_w_lg_w_lg_w_lg_do_sec_erase54w416w417w(0) <= wire_w_lg_w_lg_do_sec_erase54w416w(0) AND wire_w_lg_do_read_stat52w(0);
	wire_w_lg_w_lg_bp2_wire559w560w(0) <= wire_w_lg_bp2_wire559w(0) AND wire_w_lg_bp0_wire545w(0);
	wire_w_lg_w_lg_bp2_wire559w562w(0) <= wire_w_lg_bp2_wire559w(0) AND bp0_wire;
	wire_w_lg_w_lg_bp2_wire564w565w(0) <= wire_w_lg_bp2_wire564w(0) AND wire_w_lg_bp0_wire545w(0);
	wire_w_lg_w_lg_bp2_wire564w567w(0) <= wire_w_lg_bp2_wire564w(0) AND bp0_wire;
	wire_w_lg_w_lg_do_4baddr176w177w(0) <= wire_w_lg_do_4baddr176w(0) AND wire_w_lg_do_wren53w(0);
	wire_w_lg_w_lg_do_ex4baddr171w172w(0) <= wire_w_lg_do_ex4baddr171w(0) AND wire_w_lg_do_wren53w(0);
	wire_w_lg_w_lg_do_polling500w501w(0) <= wire_w_lg_do_polling500w(0) AND stage3_dly_reg;
	wire_w_lg_w_lg_do_read_stat123w124w(0) <= wire_w_lg_do_read_stat123w(0) AND wire_w_lg_w_lg_w119w120w121w(0);
	wire_w_lg_w_lg_do_write207w208w(0) <= wire_w_lg_do_write207w(0) AND wire_w_lg_do_wren53w(0);
	wire_w_lg_w_lg_do_write628w629w(0) <= wire_w_lg_do_write628w(0) AND wire_w_lg_do_write_rstat627w(0);
	wire_w_lg_w_lg_do_write63w338w(0) <= wire_w_lg_do_write63w(0) AND end_pgwr_data;
	wire_w_lg_w_lg_load_opcode178w267w(0) <= wire_w_lg_load_opcode178w(0) AND wire_w_b4addr_opcode_range266w(0);
	loop8 : FOR i IN 0 TO 6 GENERATE 
		wire_w_lg_w_lg_load_opcode178w179w(i) <= wire_w_lg_load_opcode178w(0) AND wire_w_b4addr_opcode_range175w(i);
	END GENERATE loop8;
	wire_w_lg_w_lg_load_opcode173w265w(0) <= wire_w_lg_load_opcode173w(0) AND wire_w_exb4addr_opcode_range264w(0);
	loop9 : FOR i IN 0 TO 6 GENERATE 
		wire_w_lg_w_lg_load_opcode173w174w(i) <= wire_w_lg_load_opcode173w(0) AND wire_w_exb4addr_opcode_range170w(i);
	END GENERATE loop9;
	wire_w_lg_w_lg_load_opcode209w281w(0) <= wire_w_lg_load_opcode209w(0) AND wire_w_write_opcode_range280w(0);
	loop10 : FOR i IN 0 TO 6 GENERATE 
		wire_w_lg_w_lg_load_opcode209w210w(i) <= wire_w_lg_load_opcode209w(0) AND wire_w_write_opcode_range206w(i);
	END GENERATE loop10;
	wire_w_lg_w_lg_load_opcode184w185w(0) <= wire_w_lg_load_opcode184w(0) AND wire_w_lg_do_wren53w(0);
	wire_w_lg_w_lg_load_opcode189w190w(0) <= wire_w_lg_load_opcode189w(0) AND wire_w_lg_do_wren53w(0);
	wire_w_lg_w_lg_load_opcode229w289w(0) <= wire_w_lg_load_opcode229w(0) AND wire_w_fast_read_opcode_range288w(0);
	loop11 : FOR i IN 0 TO 6 GENERATE 
		wire_w_lg_w_lg_load_opcode229w230w(i) <= wire_w_lg_load_opcode229w(0) AND wire_w_fast_read_opcode_range228w(i);
	END GENERATE loop11;
	wire_w_lg_w_lg_load_opcode232w291w(0) <= wire_w_lg_load_opcode232w(0) AND wire_w_read_opcode_range290w(0);
	loop12 : FOR i IN 0 TO 6 GENERATE 
		wire_w_lg_w_lg_load_opcode232w233w(i) <= wire_w_lg_load_opcode232w(0) AND wire_w_read_opcode_range231w(i);
	END GENERATE loop12;
	wire_w_lg_w_lg_load_opcode212w283w(0) <= wire_w_lg_load_opcode212w(0) AND wire_w_rnvdummyclk_opcode_range282w(0);
	loop13 : FOR i IN 0 TO 6 GENERATE 
		wire_w_lg_w_lg_load_opcode212w213w(i) <= wire_w_lg_load_opcode212w(0) AND wire_w_rnvdummyclk_opcode_range211w(i);
	END GENERATE loop13;
	wire_w_lg_w_lg_load_opcode240w295w(0) <= wire_w_lg_load_opcode240w(0) AND wire_w_rdid_opcode_range294w(0);
	loop14 : FOR i IN 0 TO 6 GENERATE 
		wire_w_lg_w_lg_load_opcode240w241w(i) <= wire_w_lg_load_opcode240w(0) AND wire_w_rdid_opcode_range239w(i);
	END GENERATE loop14;
	wire_w_lg_w_lg_load_opcode243w297w(0) <= wire_w_lg_load_opcode243w(0) AND wire_w_rsid_opcode_range296w(0);
	loop15 : FOR i IN 0 TO 6 GENERATE 
		wire_w_lg_w_lg_load_opcode243w244w(i) <= wire_w_lg_load_opcode243w(0) AND wire_w_rsid_opcode_range242w(i);
	END GENERATE loop15;
	wire_w_lg_w_lg_load_opcode199w204w(0) <= wire_w_lg_load_opcode199w(0) AND wire_w_lg_do_polling203w(0);
	wire_w_lg_w_lg_load_opcode199w200w(0) <= wire_w_lg_load_opcode199w(0) AND do_polling;
	wire_w_lg_w_lg_load_opcode223w224w(0) <= wire_w_lg_load_opcode223w(0) AND wire_w_lg_do_write_volatile222w(0);
	wire_w_lg_w_lg_load_opcode194w195w(0) <= wire_w_lg_load_opcode194w(0) AND wire_w_lg_do_wren53w(0);
	wire_w_lg_w_lg_load_opcode235w236w(0) <= wire_w_lg_load_opcode235w(0) AND wire_w_lg_do_wren53w(0);
	wire_w_lg_w_lg_load_opcode181w269w(0) <= wire_w_lg_load_opcode181w(0) AND wire_w_wren_opcode_range268w(0);
	loop16 : FOR i IN 0 TO 6 GENERATE 
		wire_w_lg_w_lg_load_opcode181w182w(i) <= wire_w_lg_load_opcode181w(0) AND wire_w_wren_opcode_range180w(i);
	END GENERATE loop16;
	wire_w_lg_w_lg_load_opcode216w217w(0) <= wire_w_lg_load_opcode216w(0) AND wire_w_lg_do_read_volatile215w(0);
	wire_w_lg_w_lg_stage3_wire45w46w(0) <= wire_w_lg_stage3_wire45w(0) AND do_wait_dummyclk;
	wire_w_lg_w_lg_start_poll345w346w(0) <= wire_w_lg_start_poll345w(0) AND do_polling;
	wire_w_lg_w_lg_bp2_wire547w548w(0) <= wire_w_lg_bp2_wire547w(0) AND wire_w_lg_bp1_wire546w(0);
	wire_w_lg_w_lg_bp2_wire547w554w(0) <= wire_w_lg_bp2_wire547w(0) AND bp1_wire;
	wire_w_lg_w_lg_do_read359w360w(0) <= wire_w_lg_do_read359w(0) AND wire_w_lg_do_fast_read358w(0);
	wire_w_lg_w_lg_do_write651w652w(0) <= wire_w_lg_do_write651w(0) AND wire_w_lg_do_sec_erase650w(0);
	wire_w_lg_w_lg_w517w518w519w(0) <= wire_w_lg_w517w518w(0) AND end_wrstage;
	wire_w_lg_w530w641w(0) <= wire_w530w(0) AND wire_wrstage_cntr_w_q_range524w(0);
	wire_w_lg_w_lg_w_lg_w_lg_do_write72w116w117w516w(0) <= wire_w_lg_w_lg_w_lg_do_write72w116w117w(0) AND wire_w_lg_write_prot_true515w(0);
	wire_w_lg_w_lg_w_lg_w_lg_do_write72w116w117w130w(0) <= wire_w_lg_w_lg_w_lg_do_write72w116w117w(0) AND write_prot_true;
	wire_w_lg_w_lg_w_lg_do_write72w73w408w(0) <= wire_w_lg_w_lg_do_write72w73w(0) AND do_memadd;
	wire_w_lg_w_lg_do_read407w474w(0) <= wire_w_lg_do_read407w(0) AND wire_stage_cntr_w_q_range103w(0);
	wire_w_lg_w_lg_do_read_rdid125w126w(0) <= wire_w_lg_do_read_rdid125w(0) AND end_op_wire;
	wire_w_lg_w_lg_do_sec_erase54w416w(0) <= wire_w_lg_do_sec_erase54w(0) AND wire_w_lg_do_wren53w(0);
	wire_w_lg_w_lg_end_operation502w503w(0) <= wire_w_lg_end_operation502w(0) AND do_read_stat;
	wire_w_lg_w_lg_rden_wire412w413w(0) <= wire_w_lg_rden_wire412w(0) AND not_busy;
	wire_w_lg_addr_overdie402w(0) <= addr_overdie AND wire_w_addr_reg_overdie_range401w(0);
	loop17 : FOR i IN 0 TO 22 GENERATE 
		wire_w_lg_addr_overdie392w(i) <= addr_overdie AND wire_w_addr_reg_overdie_range391w(i);
	END GENERATE loop17;
	wire_w_lg_bp2_wire559w(0) <= bp2_wire AND wire_w_lg_bp1_wire546w(0);
	wire_w_lg_bp2_wire564w(0) <= bp2_wire AND bp1_wire;
	wire_w_lg_do_4baddr176w(0) <= do_4baddr AND wire_w_lg_do_read_stat52w(0);
	wire_w_lg_do_bulk_erase339w(0) <= do_bulk_erase AND wire_w_lg_do_read_stat52w(0);
	wire_w_lg_do_ex4baddr171w(0) <= do_ex4baddr AND wire_w_lg_do_read_stat52w(0);
	wire_w_lg_do_polling500w(0) <= do_polling AND end_one_cyc_pos;
	wire_w_lg_do_read_nonvolatile325w(0) <= do_read_nonvolatile AND wire_addbyte_cntr_w_q_range158w(0);
	wire_w_lg_do_read_stat123w(0) <= do_read_stat AND wire_w_lg_start_poll122w(0);
	wire_w_lg_do_write207w(0) <= do_write AND wire_w_lg_do_read_stat52w(0);
	wire_w_lg_do_write628w(0) <= do_write AND wire_w_lg_do_wren53w(0);
	wire_w_lg_do_write70w(0) <= do_write AND wire_w_lg_w_pagewr_buf_not_empty_range68w69w(0);
	wire_w_lg_do_write63w(0) <= do_write AND shift_pgwr_data;
	wire_w_lg_load_opcode178w(0) <= load_opcode AND wire_w_lg_w_lg_do_4baddr176w177w(0);
	wire_w_lg_load_opcode173w(0) <= load_opcode AND wire_w_lg_w_lg_do_ex4baddr171w172w(0);
	wire_w_lg_load_opcode209w(0) <= load_opcode AND wire_w_lg_w_lg_do_write207w208w(0);
	wire_w_lg_load_opcode184w(0) <= load_opcode AND do_bulk_erase;
	wire_w_lg_load_opcode189w(0) <= load_opcode AND do_die_erase;
	wire_w_lg_load_opcode229w(0) <= load_opcode AND do_fast_read;
	wire_w_lg_load_opcode232w(0) <= load_opcode AND do_read;
	wire_w_lg_load_opcode212w(0) <= load_opcode AND do_read_nonvolatile;
	wire_w_lg_load_opcode240w(0) <= load_opcode AND do_read_rdid;
	wire_w_lg_load_opcode243w(0) <= load_opcode AND do_read_sid;
	wire_w_lg_load_opcode199w(0) <= load_opcode AND do_read_stat;
	wire_w_lg_load_opcode223w(0) <= load_opcode AND do_read_volatile;
	wire_w_lg_load_opcode194w(0) <= load_opcode AND do_sec_erase;
	wire_w_lg_load_opcode235w(0) <= load_opcode AND do_sec_prot;
	wire_w_lg_load_opcode181w(0) <= load_opcode AND do_wren;
	wire_w_lg_load_opcode216w(0) <= load_opcode AND do_write_volatile;
	wire_w_lg_not_busy404w(0) <= not_busy AND wire_w_addr_range403w(0);
	loop18 : FOR i IN 0 TO 22 GENERATE 
		wire_w_lg_not_busy396w(i) <= not_busy AND wire_w_addr_range395w(i);
	END GENERATE loop18;
	wire_w_lg_not_busy622w(0) <= not_busy AND wire_w_datain_range621w(0);
	loop19 : FOR i IN 0 TO 6 GENERATE 
		wire_w_lg_not_busy617w(i) <= not_busy AND wire_w_datain_range616w(i);
	END GENERATE loop19;
	loop20 : FOR i IN 0 TO 6 GENERATE 
		wire_w_lg_shift_opcode169w(i) <= shift_opcode AND wire_asmi_opcode_reg_w_q_range168w(i);
	END GENERATE loop20;
	wire_w_lg_stage3_wire410w(0) <= stage3_wire AND wire_w_lg_w_lg_w_lg_w_lg_do_write72w73w408w409w(0);
	wire_w_lg_stage3_wire441w(0) <= stage3_wire AND wire_w_lg_w_lg_w_lg_do_read_stat438w439w440w(0);
	wire_w_lg_stage3_wire55w(0) <= stage3_wire AND wire_w_lg_do_sec_erase54w(0);
	wire_w_lg_stage3_wire45w(0) <= stage3_wire AND do_fast_read;
	loop21 : FOR i IN 0 TO 22 GENERATE 
		wire_w_lg_stage3_wire394w(i) <= stage3_wire AND wire_addr_reg_w_q_range393w(i);
	END GENERATE loop21;
	wire_w_lg_stage4_wire443w(0) <= stage4_wire AND wire_w_lg_w_lg_do_read407w442w(0);
	wire_w_lg_stage4_wire411w(0) <= stage4_wire AND addr_overdie;
	loop22 : FOR i IN 0 TO 6 GENERATE 
		wire_w_lg_stage4_wire615w(i) <= stage4_wire AND wire_datain_reg_w_q_range614w(i);
	END GENERATE loop22;
	wire_w_lg_start_poll345w(0) <= start_poll AND do_read_stat;
	wire_w_lg_wren_wire631w(0) <= wren_wire AND not_busy;
	wire_w_lg_w_mask_prot_range568w575w(0) <= wire_w_mask_prot_range568w(0) AND wire_addr_reg_w_q_range574w(0);
	wire_w_lg_w_mask_prot_range571w582w(0) <= wire_w_mask_prot_range571w(0) AND wire_addr_reg_w_q_range581w(0);
	wire_w_lg_w_mask_prot_range573w587w(0) <= wire_w_mask_prot_range573w(0) AND wire_addr_reg_w_q_range586w(0);
	wire_w_lg_w_lg_do_write63w357w(0) <= NOT wire_w_lg_do_write63w(0);
	wire_w_lg_w_lg_w119w120w121w(0) <= NOT wire_w_lg_w119w120w(0);
	wire_w_lg_addr_overdie490w(0) <= NOT addr_overdie;
	wire_w_lg_bp0_wire545w(0) <= NOT bp0_wire;
	wire_w_lg_bp1_wire546w(0) <= NOT bp1_wire;
	wire_w_lg_bp2_wire547w(0) <= NOT bp2_wire;
	wire_w_lg_busy_wire1w(0) <= NOT busy_wire;
	wire_w_lg_clkin_wire101w(0) <= NOT clkin_wire;
	wire_w_lg_do_4baddr647w(0) <= NOT do_4baddr;
	wire_w_lg_do_bulk_erase649w(0) <= NOT do_bulk_erase;
	wire_w_lg_do_die_erase648w(0) <= NOT do_die_erase;
	wire_w_lg_do_ex4baddr646w(0) <= NOT do_ex4baddr;
	wire_w_lg_do_fast_read358w(0) <= NOT do_fast_read;
	wire_w_lg_do_memadd425w(0) <= NOT do_memadd;
	wire_w_lg_do_polling203w(0) <= NOT do_polling;
	wire_w_lg_do_read359w(0) <= NOT do_read;
	wire_w_lg_do_read_rdid51w(0) <= NOT do_read_rdid;
	wire_w_lg_do_read_stat52w(0) <= NOT do_read_stat;
	wire_w_lg_do_read_volatile215w(0) <= NOT do_read_volatile;
	wire_w_lg_do_sec_erase650w(0) <= NOT do_sec_erase;
	wire_w_lg_do_wren53w(0) <= NOT do_wren;
	wire_w_lg_do_write651w(0) <= NOT do_write;
	wire_w_lg_do_write_rstat627w(0) <= NOT do_write_rstat;
	wire_w_lg_do_write_volatile222w(0) <= NOT do_write_volatile;
	wire_w_lg_end_add_cycle83w(0) <= NOT end_add_cycle;
	wire_w_lg_end_fast_read77w(0) <= NOT end_fast_read;
	wire_w_lg_end_ophdly39w(0) <= NOT end_ophdly;
	wire_w_lg_end_pgwr_data62w(0) <= NOT end_pgwr_data;
	wire_w_lg_end_read80w(0) <= NOT end_read;
	wire_w_lg_rden_wire492w(0) <= NOT rden_wire;
	wire_w_lg_read_rdid_wire9w(0) <= NOT read_rdid_wire;
	wire_w_lg_read_sid_wire8w(0) <= NOT read_sid_wire;
	wire_w_lg_sec_protect_wire7w(0) <= NOT sec_protect_wire;
	wire_w_lg_st_busy_wire127w(0) <= NOT st_busy_wire;
	wire_w_lg_start_poll122w(0) <= NOT start_poll;
	wire_w_lg_write_prot_true515w(0) <= NOT write_prot_true;
	wire_w_lg_write_wire17w(0) <= NOT write_wire;
	wire_w_lg_w_pagewr_buf_not_empty_range68w69w(0) <= NOT wire_w_pagewr_buf_not_empty_range68w(0);
	wire_w_lg_w_lg_w_lg_w_lg_w530w641w642w658w659w(0) <= wire_w_lg_w_lg_w_lg_w530w641w642w658w(0) OR write_prot_true;
	wire_w_lg_w_lg_w_lg_load_opcode243w297w298w(0) <= wire_w_lg_w_lg_load_opcode243w297w(0) OR wire_w_lg_w_lg_load_opcode240w295w(0);
	loop23 : FOR i IN 0 TO 6 GENERATE 
		wire_w_lg_w_lg_w_lg_load_opcode243w244w245w(i) <= wire_w_lg_w_lg_load_opcode243w244w(i) OR wire_w_lg_w_lg_load_opcode240w241w(i);
	END GENERATE loop23;
	wire_w517w(0) <= wire_w_lg_w_lg_w_lg_w_lg_do_write72w116w117w516w(0) OR do_4baddr;
	wire_w_lg_w_lg_w_lg_w_lg_do_write72w73w408w409w(0) <= wire_w_lg_w_lg_w_lg_do_write72w73w408w(0) OR wire_w_lg_do_read407w(0);
	wire_w_lg_w_lg_w_lg_end_operation502w503w504w(0) <= wire_w_lg_w_lg_end_operation502w503w(0) OR clr_rstat_wire;
	wire_w_lg_w_lg_w_lg_rden_wire412w413w414w(0) <= wire_w_lg_w_lg_rden_wire412w413w(0) OR wire_w_lg_stage4_wire411w(0);
	wire_w_lg_w_lg_not_busy404w405w(0) <= wire_w_lg_not_busy404w(0) OR wire_w_lg_addr_overdie402w(0);
	loop24 : FOR i IN 0 TO 22 GENERATE 
		wire_w_lg_w_lg_not_busy396w397w(i) <= wire_w_lg_not_busy396w(i) OR wire_w_lg_stage3_wire394w(i);
	END GENERATE loop24;
	loop25 : FOR i IN 0 TO 6 GENERATE 
		wire_w_lg_w_lg_not_busy617w618w(i) <= wire_w_lg_not_busy617w(i) OR wire_w_lg_stage4_wire615w(i);
	END GENERATE loop25;
	wire_w_lg_w_lg_stage4_wire443w444w(0) <= wire_w_lg_stage4_wire443w(0) OR wire_w_lg_stage3_wire441w(0);
	wire_w_lg_w_lg_wren_wire631w632w(0) <= wire_w_lg_wren_wire631w(0) OR wire_w_lg_w_lg_w_lg_do_write628w629w630w(0);
	wire_w_lg_w_lg_w_lg_w_lg_load_opcode243w297w298w299w(0) <= wire_w_lg_w_lg_w_lg_load_opcode243w297w298w(0) OR wire_w_lg_w_lg_w_lg_w_lg_load_opcode235w236w237w293w(0);
	loop26 : FOR i IN 0 TO 6 GENERATE 
		wire_w_lg_w_lg_w_lg_w_lg_load_opcode243w244w245w246w(i) <= wire_w_lg_w_lg_w_lg_load_opcode243w244w245w(i) OR wire_w_lg_w_lg_w_lg_w_lg_load_opcode235w236w237w238w(i);
	END GENERATE loop26;
	wire_w_lg_w517w518w(0) <= wire_w517w(0) OR do_ex4baddr;
	wire_w_lg_w_lg_w_lg_w_lg_rden_wire412w413w414w415w(0) <= wire_w_lg_w_lg_w_lg_rden_wire412w413w414w(0) OR wire_w_lg_stage3_wire410w(0);
	loop27 : FOR i IN 0 TO 22 GENERATE 
		wire_w_lg_w_lg_w_lg_not_busy396w397w398w(i) <= wire_w_lg_w_lg_not_busy396w397w(i) OR wire_w_lg_addr_overdie392w(i);
	END GENERATE loop27;
	wire_w300w(0) <= wire_w_lg_w_lg_w_lg_w_lg_load_opcode243w297w298w299w(0) OR wire_w_lg_w_lg_load_opcode232w291w(0);
	loop28 : FOR i IN 0 TO 6 GENERATE 
		wire_w247w(i) <= wire_w_lg_w_lg_w_lg_w_lg_load_opcode243w244w245w246w(i) OR wire_w_lg_w_lg_load_opcode232w233w(i);
	END GENERATE loop28;
	wire_w_lg_w300w301w(0) <= wire_w300w(0) OR wire_w_lg_w_lg_load_opcode229w289w(0);
	loop29 : FOR i IN 0 TO 6 GENERATE 
		wire_w_lg_w247w248w(i) <= wire_w247w(i) OR wire_w_lg_w_lg_load_opcode229w230w(i);
	END GENERATE loop29;
	wire_w_lg_w_lg_w300w301w302w(0) <= wire_w_lg_w300w301w(0) OR wire_w287w(0);
	loop30 : FOR i IN 0 TO 6 GENERATE 
		wire_w_lg_w_lg_w247w248w249w(i) <= wire_w_lg_w247w248w(i) OR wire_w227w(i);
	END GENERATE loop30;
	wire_w_lg_w_lg_w_lg_w300w301w302w303w(0) <= wire_w_lg_w_lg_w300w301w302w(0) OR wire_w285w(0);
	loop31 : FOR i IN 0 TO 6 GENERATE 
		wire_w_lg_w_lg_w_lg_w247w248w249w250w(i) <= wire_w_lg_w_lg_w247w248w249w(i) OR wire_w220w(i);
	END GENERATE loop31;
	wire_w_lg_w_lg_w_lg_w_lg_w300w301w302w303w304w(0) <= wire_w_lg_w_lg_w_lg_w300w301w302w303w(0) OR wire_w_lg_w_lg_load_opcode212w283w(0);
	loop32 : FOR i IN 0 TO 6 GENERATE 
		wire_w_lg_w_lg_w_lg_w_lg_w247w248w249w250w251w(i) <= wire_w_lg_w_lg_w_lg_w247w248w249w250w(i) OR wire_w_lg_w_lg_load_opcode212w213w(i);
	END GENERATE loop32;
	wire_w_lg_w_lg_w_lg_w_lg_w_lg_w300w301w302w303w304w305w(0) <= wire_w_lg_w_lg_w_lg_w_lg_w300w301w302w303w304w(0) OR wire_w_lg_w_lg_load_opcode209w281w(0);
	loop33 : FOR i IN 0 TO 6 GENERATE 
		wire_w_lg_w_lg_w_lg_w_lg_w_lg_w247w248w249w250w251w252w(i) <= wire_w_lg_w_lg_w_lg_w_lg_w247w248w249w250w251w(i) OR wire_w_lg_w_lg_load_opcode209w210w(i);
	END GENERATE loop33;
	wire_w306w(0) <= wire_w_lg_w_lg_w_lg_w_lg_w_lg_w300w301w302w303w304w305w(0) OR wire_w_lg_w_lg_w_lg_load_opcode199w204w279w(0);
	loop34 : FOR i IN 0 TO 6 GENERATE 
		wire_w253w(i) <= wire_w_lg_w_lg_w_lg_w_lg_w_lg_w247w248w249w250w251w252w(i) OR wire_w_lg_w_lg_w_lg_load_opcode199w204w205w(i);
	END GENERATE loop34;
	wire_w_lg_w306w307w(0) <= wire_w306w(0) OR wire_w_lg_w_lg_w_lg_load_opcode199w200w277w(0);
	loop35 : FOR i IN 0 TO 6 GENERATE 
		wire_w_lg_w253w254w(i) <= wire_w253w(i) OR wire_w_lg_w_lg_w_lg_load_opcode199w200w201w(i);
	END GENERATE loop35;
	wire_w_lg_w_lg_w306w307w308w(0) <= wire_w_lg_w306w307w(0) OR wire_w_lg_w_lg_w_lg_w_lg_load_opcode194w195w196w275w(0);
	loop36 : FOR i IN 0 TO 6 GENERATE 
		wire_w_lg_w_lg_w253w254w255w(i) <= wire_w_lg_w253w254w(i) OR wire_w_lg_w_lg_w_lg_w_lg_load_opcode194w195w196w197w(i);
	END GENERATE loop36;
	wire_w_lg_w_lg_w_lg_w306w307w308w309w(0) <= wire_w_lg_w_lg_w306w307w308w(0) OR wire_w_lg_w_lg_w_lg_w_lg_load_opcode189w190w191w273w(0);
	loop37 : FOR i IN 0 TO 6 GENERATE 
		wire_w_lg_w_lg_w_lg_w253w254w255w256w(i) <= wire_w_lg_w_lg_w253w254w255w(i) OR wire_w_lg_w_lg_w_lg_w_lg_load_opcode189w190w191w192w(i);
	END GENERATE loop37;
	wire_w_lg_w_lg_w_lg_w_lg_w306w307w308w309w310w(0) <= wire_w_lg_w_lg_w_lg_w306w307w308w309w(0) OR wire_w_lg_w_lg_w_lg_w_lg_load_opcode184w185w186w271w(0);
	loop38 : FOR i IN 0 TO 6 GENERATE 
		wire_w_lg_w_lg_w_lg_w_lg_w253w254w255w256w257w(i) <= wire_w_lg_w_lg_w_lg_w253w254w255w256w(i) OR wire_w_lg_w_lg_w_lg_w_lg_load_opcode184w185w186w187w(i);
	END GENERATE loop38;
	wire_w_lg_w_lg_w_lg_w_lg_w_lg_w306w307w308w309w310w311w(0) <= wire_w_lg_w_lg_w_lg_w_lg_w306w307w308w309w310w(0) OR wire_w_lg_w_lg_load_opcode181w269w(0);
	loop39 : FOR i IN 0 TO 6 GENERATE 
		wire_w_lg_w_lg_w_lg_w_lg_w_lg_w253w254w255w256w257w258w(i) <= wire_w_lg_w_lg_w_lg_w_lg_w253w254w255w256w257w(i) OR wire_w_lg_w_lg_load_opcode181w182w(i);
	END GENERATE loop39;
	wire_w312w(0) <= wire_w_lg_w_lg_w_lg_w_lg_w_lg_w306w307w308w309w310w311w(0) OR wire_w_lg_w_lg_load_opcode178w267w(0);
	loop40 : FOR i IN 0 TO 6 GENERATE 
		wire_w259w(i) <= wire_w_lg_w_lg_w_lg_w_lg_w_lg_w253w254w255w256w257w258w(i) OR wire_w_lg_w_lg_load_opcode178w179w(i);
	END GENERATE loop40;
	wire_w_lg_w312w313w(0) <= wire_w312w(0) OR wire_w_lg_w_lg_load_opcode173w265w(0);
	loop41 : FOR i IN 0 TO 6 GENERATE 
		wire_w_lg_w259w260w(i) <= wire_w259w(i) OR wire_w_lg_w_lg_load_opcode173w174w(i);
	END GENERATE loop41;
	loop42 : FOR i IN 0 TO 6 GENERATE 
		wire_w_lg_w_lg_w259w260w261w(i) <= wire_w_lg_w259w260w(i) OR wire_w_lg_shift_opcode169w(i);
	END GENERATE loop42;
	wire_w_lg_w_lg_w151w152w153w(0) <= wire_w_lg_w151w152w(0) OR do_read_nonvolatile;
	wire_w_lg_w151w152w(0) <= wire_w151w(0) OR do_fast_read;
	wire_w_lg_w119w120w(0) <= wire_w119w(0) OR do_ex4baddr;
	wire_w151w(0) <= wire_w_lg_w_lg_w_lg_w_lg_do_read_sid147w148w149w150w(0) OR do_read;
	wire_w530w(0) <= wire_w_lg_w_lg_w_lg_w_lg_do_write72w116w117w529w(0) OR do_ex4baddr;
	wire_w119w(0) <= wire_w_lg_w_lg_w_lg_w_lg_do_write72w116w117w118w(0) OR do_4baddr;
	wire_w_lg_w_lg_w_lg_w_lg_do_read407w428w429w430w(0) <= wire_w_lg_w_lg_w_lg_do_read407w428w429w(0) OR do_die_erase;
	wire_w_lg_w_lg_w_lg_w_lg_do_read_sid147w148w149w150w(0) <= wire_w_lg_w_lg_w_lg_do_read_sid147w148w149w(0) OR do_read_rdid;
	wire_w_lg_w_lg_w_lg_w_lg_do_write72w116w117w529w(0) <= wire_w_lg_w_lg_w_lg_do_write72w116w117w(0) OR do_4baddr;
	wire_w_lg_w_lg_w_lg_w_lg_do_write72w116w117w118w(0) <= wire_w_lg_w_lg_w_lg_do_write72w116w117w(0) OR do_fread_epcq;
	wire_w_lg_w_lg_w_lg_bp3_wire539w540w541w(0) <= wire_w_lg_w_lg_bp3_wire539w540w(0) OR bp0_wire;
	wire_w_lg_w_lg_w_lg_do_read407w428w429w(0) <= wire_w_lg_w_lg_do_read407w428w(0) OR do_sec_erase;
	wire_w_lg_w_lg_w_lg_do_read_sid147w148w149w(0) <= wire_w_lg_w_lg_do_read_sid147w148w(0) OR do_die_erase;
	wire_w_lg_w_lg_w_lg_do_read_stat438w439w440w(0) <= wire_w_lg_w_lg_do_read_stat438w439w(0) OR do_read_nonvolatile;
	wire_w_lg_w_lg_w_lg_do_sec_erase532w533w534w(0) <= wire_w_lg_w_lg_do_sec_erase532w533w(0) OR do_die_erase;
	wire_w_lg_w_lg_w_lg_do_write72w116w117w(0) <= wire_w_lg_w_lg_do_write72w116w(0) OR do_die_erase;
	wire_w_lg_w_lg_bp3_wire539w540w(0) <= wire_w_lg_bp3_wire539w(0) OR bp1_wire;
	wire_w_lg_w_lg_do_read407w442w(0) <= wire_w_lg_do_read407w(0) OR do_read_sid;
	wire_w_lg_w_lg_do_read407w428w(0) <= wire_w_lg_do_read407w(0) OR do_write;
	wire_w_lg_w_lg_do_read_sid147w148w(0) <= wire_w_lg_do_read_sid147w(0) OR do_sec_erase;
	wire_w_lg_w_lg_do_read_stat438w439w(0) <= wire_w_lg_do_read_stat438w(0) OR do_read_volatile;
	wire_w_lg_w_lg_do_sec_erase532w533w(0) <= wire_w_lg_do_sec_erase532w(0) OR do_bulk_erase;
	wire_w_lg_w_lg_do_write72w116w(0) <= wire_w_lg_do_write72w(0) OR do_bulk_erase;
	wire_w_lg_w_lg_do_write72w73w(0) <= wire_w_lg_do_write72w(0) OR do_die_erase;
	wire_w_lg_w_lg_w_prot_wire_range551w570w572w(0) <= wire_w_lg_w_prot_wire_range551w570w(0) OR wire_w_prot_wire_range556w(0);
	wire_w_lg_bp3_wire539w(0) <= bp3_wire OR bp2_wire;
	wire_w_lg_data0out_wire446w(0) <= data0out_wire OR wire_w_dataout_wire_range445w(0);
	wire_w_lg_do_4baddr341w(0) <= do_4baddr OR wire_w_lg_do_ex4baddr340w(0);
	wire_w_lg_do_ex4baddr340w(0) <= do_ex4baddr OR wire_w_lg_do_bulk_erase339w(0);
	wire_w_lg_do_read407w(0) <= do_read OR do_fast_read;
	wire_w_lg_do_read_rdid125w(0) <= do_read_rdid OR wire_w_lg_w_lg_do_read_stat123w124w(0);
	wire_w_lg_do_read_sid147w(0) <= do_read_sid OR do_write;
	wire_w_lg_do_read_stat438w(0) <= do_read_stat OR do_read_rdid;
	wire_w_lg_do_sec_erase54w(0) <= do_sec_erase OR do_die_erase;
	wire_w_lg_do_sec_erase532w(0) <= do_sec_erase OR do_write;
	wire_w_lg_do_wren342w(0) <= do_wren OR wire_w_lg_do_4baddr341w(0);
	wire_w_lg_do_write72w(0) <= do_write OR do_sec_erase;
	wire_w_lg_end_operation502w(0) <= end_operation OR wire_w_lg_w_lg_do_polling500w501w(0);
	wire_w_lg_load_opcode315w(0) <= load_opcode OR shift_opcode;
	wire_w_lg_rden_wire412w(0) <= rden_wire OR wren_wire;
	wire_w_lg_w_mask_prot_add_range583w597w(0) <= wire_w_mask_prot_add_range583w(0) OR wire_w_mask_prot_comp_tb_range593w(0);
	wire_w_lg_w_mask_prot_add_range588w601w(0) <= wire_w_mask_prot_add_range588w(0) OR wire_w_mask_prot_comp_tb_range598w(0);
	wire_w_lg_w_mask_prot_check_range585w595w(0) <= wire_w_mask_prot_check_range585w(0) OR wire_w_mask_prot_comp_ntb_range591w(0);
	wire_w_lg_w_mask_prot_check_range590w599w(0) <= wire_w_mask_prot_check_range590w(0) OR wire_w_mask_prot_comp_ntb_range596w(0);
	wire_w_lg_w_prot_wire_range551w570w(0) <= wire_w_prot_wire_range551w(0) OR wire_w_prot_wire_range553w(0);
	wire_w_lg_w_mask_prot_range568w578w(0) <= wire_w_mask_prot_range568w(0) XOR wire_w_mask_prot_add_range576w(0);
	wire_w_lg_w_mask_prot_range571w584w(0) <= wire_w_mask_prot_range571w(0) XOR wire_w_mask_prot_add_range583w(0);
	wire_w_lg_w_mask_prot_range573w589w(0) <= wire_w_mask_prot_range573w(0) XOR wire_w_mask_prot_add_range588w(0);
	addr_overdie <= '0';
	addr_overdie_pos <= '0';
	addr_reg_overdie <= (OTHERS => '0');
	b4addr_opcode <= (OTHERS => '0');
	be_write_prot <= ((do_bulk_erase OR do_die_erase) AND wire_w_lg_w_lg_w_lg_bp3_wire539w540w541w(0));
	berase_opcode <= (OTHERS => '0');
	bp0_wire <= statreg_int(2);
	bp1_wire <= statreg_int(3);
	bp2_wire <= statreg_int(4);
	bp3_wire <= statreg_int(6);
	busy <= busy_wire;
	busy_wire <= ((((((((((((((do_read_rdid OR do_read_sid) OR do_read) OR do_fast_read) OR do_write) OR do_sec_prot) OR do_read_stat) OR do_sec_erase) OR do_bulk_erase) OR do_die_erase) OR do_4baddr) OR do_read_volatile) OR do_fread_epcq) OR do_read_nonvolatile) OR do_ex4baddr);
	clkin_wire <= clkin;
	clr_addmsb_wire <= ((wire_stage_cntr_w_lg_w_lg_w_lg_w_q_range103w108w420w421w(0) OR wire_w_lg_w_lg_w_lg_do_read359w360w419w(0)) OR wire_w_lg_w_lg_w_lg_w_lg_do_sec_erase54w416w417w418w(0));
	clr_endrbyte_wire <= ((((wire_w_lg_do_read407w(0) AND (NOT wire_gen_cntr_q(2))) AND wire_gen_cntr_q(1)) AND wire_gen_cntr_q(0)) OR clr_read_wire2);
	clr_read_wire <= clr_read_reg;
	clr_read_wire2 <= clr_read_reg2;
	clr_rstat_wire <= clr_rstat_reg;
	clr_write_wire <= clr_write_reg;
	clr_write_wire2 <= clr_write_reg2;
	data0out_wire <= wire_cycloneii_asmiblock2_data0out;
	data_valid <= data_valid_wire;
	data_valid_wire <= dvalid_reg2;
	datain_reg_wire_in <= ( wire_w_lg_w_lg_not_busy617w618w & wire_w_lg_not_busy622w);
	datain_wire <= ( "0000");
	dataout <= ( read_data_reg(7 DOWNTO 0));
	dataout_wire <= ( "0000");
	derase_opcode <= (OTHERS => '0');
	do_4baddr <= '0';
	do_bulk_erase <= '0';
	do_die_erase <= '0';
	do_ex4baddr <= '0';
	do_fast_read <= '0';
	do_fread_epcq <= '0';
	do_freadwrv_polling <= '0';
	do_memadd <= do_wrmemadd_reg;
	do_polling <= ((do_write_polling OR do_sprot_polling) OR do_freadwrv_polling);
	do_read <= (((wire_w_lg_read_rdid_wire9w(0) AND wire_w_lg_read_sid_wire8w(0)) AND wire_w_lg_sec_protect_wire7w(0)) AND read_wire);
	do_read_nonvolatile <= '0';
	do_read_rdid <= '0';
	do_read_sid <= '0';
	do_read_stat <= ((((((((wire_w_lg_read_rdid_wire9w(0) AND wire_w_lg_read_sid_wire8w(0)) AND wire_w_lg_sec_protect_wire7w(0)) AND (NOT (read_wire OR fast_read_wire))) AND wire_w_lg_write_wire17w(0)) AND read_status_wire) OR do_write_rstat) OR do_sprot_rstat) OR do_write_volatile_rstat);
	do_read_volatile <= '0';
	do_sec_erase <= '0';
	do_sec_prot <= '0';
	do_secprot_wren <= '0';
	do_sprot_polling <= '0';
	do_sprot_rstat <= '0';
	do_wait_dummyclk <= '0';
	do_wren <= ((do_write_wren OR do_secprot_wren) OR do_write_volatile_wren);
	do_write <= ((((wire_w_lg_read_rdid_wire9w(0) AND wire_w_lg_read_sid_wire8w(0)) AND wire_w_lg_sec_protect_wire7w(0)) AND (NOT (read_wire OR fast_read_wire))) AND write_wire);
	do_write_polling <= wire_w_lg_w_lg_w530w641w642w(0);
	do_write_rstat <= write_rstat_reg;
	do_write_volatile <= '0';
	do_write_volatile_rstat <= '0';
	do_write_volatile_wren <= '0';
	do_write_wren <= ((NOT wire_wrstage_cntr_q(1)) AND wire_wrstage_cntr_q(0));
	end1_cyc_gen_cntr_wire <= (wire_gen_cntr_w_lg_w_q_range113w114w(0) AND (NOT wire_gen_cntr_q(0)));
	end1_cyc_normal_in_wire <= ((((((((((wire_stage_cntr_w_lg_w_lg_w_q_range102w107w133w(0) AND (NOT wire_gen_cntr_q(2))) AND wire_gen_cntr_q(1)) AND wire_gen_cntr_q(0)) OR wire_stage_cntr_w_lg_w_lg_w_lg_w_lg_w_q_range102w107w133w134w135w(0)) OR (do_read AND end_read)) OR (do_fast_read AND end_fast_read)) OR wire_w_lg_w_lg_w_lg_w_lg_do_write72w116w117w130w(0)) OR wire_w_lg_do_write70w(0)) OR ((do_read_stat AND start_poll) AND wire_w_lg_st_busy_wire127w(0))) OR wire_w_lg_w_lg_do_read_rdid125w126w(0));
	end1_cyc_reg_in_wire <= end1_cyc_normal_in_wire;
	end_add_cycle <= wire_mux211_dataout;
	end_add_cycle_mux_datab_wire <= (wire_addbyte_cntr_q(2) AND wire_addbyte_cntr_q(1));
	end_fast_read <= end_read_reg;
	end_one_cyc_pos <= end1_cyc_reg2;
	end_one_cycle <= end1_cyc_reg;
	end_op_wire <= (((((((((((wire_stage_cntr_w_lg_w_q_range103w108w(0) AND ((wire_w_lg_w_lg_w_lg_w_lg_do_read359w360w361w362w(0) OR (do_read AND end_read)) OR (do_fast_read AND end_fast_read))) OR (wire_stage_cntr_w_lg_w_lg_w_lg_w_q_range103w106w354w355w(0) AND wire_w_lg_do_polling203w(0))) OR ((((((do_read_rdid AND end_one_cyc_pos) AND wire_stage_cntr_q(1)) AND wire_stage_cntr_q(0)) AND wire_addbyte_cntr_q(2)) AND wire_addbyte_cntr_q(1)) AND wire_addbyte_cntr_w_lg_w_q_range161w162w(0))) OR (wire_w_lg_w_lg_start_poll345w346w(0) AND wire_w_lg_st_busy_wire127w(0))) OR wire_stage_cntr_w_lg_w_lg_w_lg_w_lg_w_q_range103w104w105w343w344w(0)) OR wire_w_lg_w_lg_w_lg_w_lg_do_write72w116w117w130w(0)) OR wire_w_lg_w_lg_do_write63w338w(0)) OR wire_w_lg_do_write70w(0)) OR wire_stage_cntr_w337w(0)) OR wire_stage_cntr_w_lg_w332w333w(0)) OR (wire_stage_cntr_w_lg_w_lg_w_q_range103w106w327w(0) AND ((do_write_volatile OR do_read_volatile) OR wire_w_lg_do_read_nonvolatile325w(0))));
	end_operation <= end_op_reg;
	end_ophdly <= end_op_hdlyreg;
	end_pgwr_data <= '0';
	end_read <= end_read_reg;
	end_read_byte <= (end_rbyte_reg AND wire_w_lg_addr_overdie490w(0));
	end_wrstage <= end_operation;
	exb4addr_opcode <= (OTHERS => '0');
	fast_read_opcode <= (OTHERS => '0');
	fast_read_wire <= '0';
	freadwrv_sdoin <= '0';
	ill_write_wire <= ill_write_reg;
	illegal_write <= ill_write_wire;
	illegal_write_b4out_wire <= (((do_write AND write_prot_true) OR (illegal_write_prot AND write_prot_true2)) OR wire_w_lg_do_write70w(0));
	illegal_write_prot <= illegal_write_prot_reg;
	in_operation <= busy_wire;
	load_opcode <= ((((wire_stage_cntr_w_lg_w_q_range103w104w(0) AND wire_stage_cntr_w_lg_w_q_range102w107w(0)) AND (NOT wire_gen_cntr_q(2))) AND wire_gen_cntr_w_lg_w_q_range111w112w(0)) AND wire_gen_cntr_q(0));
	mask_prot <= ( wire_w_lg_w_lg_w_prot_wire_range551w570w572w & wire_w_lg_w_prot_wire_range551w570w & prot_wire(1));
	mask_prot_add <= ( wire_w_lg_w_mask_prot_range573w587w & wire_w_lg_w_mask_prot_range571w582w & wire_w_lg_w_mask_prot_range568w575w);
	mask_prot_check <= ( wire_w_lg_w_mask_prot_range573w589w & wire_w_lg_w_mask_prot_range571w584w & wire_w_lg_w_mask_prot_range568w578w);
	mask_prot_comp_ntb <= ( wire_w_lg_w_mask_prot_check_range590w599w & wire_w_lg_w_mask_prot_check_range585w595w & mask_prot_check(0));
	mask_prot_comp_tb <= ( wire_w_lg_w_mask_prot_add_range588w601w & wire_w_lg_w_mask_prot_add_range583w597w & mask_prot_add(0));
	memadd_sdoin <= add_msb_reg;
	ncs_reg_ena_wire <= (((wire_stage_cntr_w_lg_w_lg_w_q_range103w104w105w(0) AND end_one_cyc_pos) OR addr_overdie_pos) OR end_operation);
	not_busy <= busy_det_reg;
	oe_wire <= '0';
	pagewr_buf_not_empty <= ( "1");
	prot_wire <= ( wire_w_lg_w_lg_bp2_wire564w567w & wire_w_lg_w_lg_bp2_wire564w565w & wire_w_lg_w_lg_bp2_wire559w562w & wire_w_lg_w_lg_bp2_wire559w560w & wire_w_lg_w_lg_w_lg_bp2_wire547w554w557w & wire_w_lg_w_lg_w_lg_bp2_wire547w554w555w & wire_w_lg_w_lg_w_lg_bp2_wire547w548w552w & wire_w_lg_w_lg_w_lg_bp2_wire547w548w549w);
	rden_wire <= rden;
	rdid_opcode <= (OTHERS => '0');
	rdummyclk_opcode <= (OTHERS => '0');
	read_data_reg_in_wire <= ( read_dout_reg(7 DOWNTO 0));
	read_opcode <= "00000011";
	read_rdid_wire <= '0';
	read_sid_wire <= '0';
	read_status_wire <= '0';
	read_wire <= read_reg;
	rflagstat_opcode <= "00000101";
	rnvdummyclk_opcode <= (OTHERS => '0');
	rsid_opcode <= (OTHERS => '0');
	rsid_sdoin <= '0';
	rstat_opcode <= "00000101";
	scein_wire <= wire_ncs_reg_w_lg_q380w(0);
	sdoin_wire <= to_sdoin_wire;
	sec_protect_wire <= '0';
	secprot_opcode <= (OTHERS => '0');
	secprot_sdoin <= '0';
	serase_opcode <= (OTHERS => '0');
	shift_opcode <= shift_op_reg;
	shift_opdata <= stage2_wire;
	shift_pgwr_data <= '0';
	st_busy_wire <= statreg_int(0);
	stage2_wire <= stage2_reg;
	stage3_wire <= stage3_reg;
	stage4_wire <= stage4_reg;
	start_frpoll <= '0';
	start_poll <= ((start_wrpoll OR start_sppoll) OR start_frpoll);
	start_sppoll <= '0';
	start_wrpoll <= start_wrpoll_reg2;
	to_sdoin_wire <= ((((((shift_opdata AND asmi_opcode_reg(7)) OR rsid_sdoin) OR memadd_sdoin) OR write_sdoin) OR secprot_sdoin) OR freadwrv_sdoin);
	wren_opcode <= "00000110";
	wren_wire <= wren;
	write_opcode <= "00000010";
	write_prot_true <= write_prot_reg;
	write_prot_true2 <= write_prot_reg2;
	write_sdoin <= ((((do_write AND stage4_wire) AND wire_wrstage_cntr_q(1)) AND wire_wrstage_cntr_q(0)) AND wrsdoin_reg);
	write_wire <= write_reg;
	wrvolatile_opcode <= (OTHERS => '0');
	wire_w_addr_range403w(0) <= addr(0);
	wire_w_addr_range395w <= addr(23 DOWNTO 1);
	wire_w_addr_reg_overdie_range401w(0) <= addr_reg_overdie(0);
	wire_w_addr_reg_overdie_range391w <= addr_reg_overdie(23 DOWNTO 1);
	wire_w_b4addr_opcode_range266w(0) <= b4addr_opcode(0);
	wire_w_b4addr_opcode_range175w <= b4addr_opcode(7 DOWNTO 1);
	wire_w_berase_opcode_range270w(0) <= berase_opcode(0);
	wire_w_berase_opcode_range183w <= berase_opcode(7 DOWNTO 1);
	wire_w_datain_range621w(0) <= datain(0);
	wire_w_datain_range616w <= datain(7 DOWNTO 1);
	wire_w_dataout_wire_range445w(0) <= dataout_wire(1);
	wire_w_derase_opcode_range272w(0) <= derase_opcode(0);
	wire_w_derase_opcode_range188w <= derase_opcode(7 DOWNTO 1);
	wire_w_exb4addr_opcode_range264w(0) <= exb4addr_opcode(0);
	wire_w_exb4addr_opcode_range170w <= exb4addr_opcode(7 DOWNTO 1);
	wire_w_fast_read_opcode_range288w(0) <= fast_read_opcode(0);
	wire_w_fast_read_opcode_range228w <= fast_read_opcode(7 DOWNTO 1);
	wire_w_mask_prot_range568w(0) <= mask_prot(0);
	wire_w_mask_prot_range571w(0) <= mask_prot(1);
	wire_w_mask_prot_range573w(0) <= mask_prot(2);
	wire_w_mask_prot_add_range576w(0) <= mask_prot_add(0);
	wire_w_mask_prot_add_range583w(0) <= mask_prot_add(1);
	wire_w_mask_prot_add_range588w(0) <= mask_prot_add(2);
	wire_w_mask_prot_check_range585w(0) <= mask_prot_check(1);
	wire_w_mask_prot_check_range590w(0) <= mask_prot_check(2);
	wire_w_mask_prot_comp_ntb_range591w(0) <= mask_prot_comp_ntb(0);
	wire_w_mask_prot_comp_ntb_range596w(0) <= mask_prot_comp_ntb(1);
	wire_w_mask_prot_comp_tb_range593w(0) <= mask_prot_comp_tb(0);
	wire_w_mask_prot_comp_tb_range598w(0) <= mask_prot_comp_tb(1);
	wire_w_pagewr_buf_not_empty_range68w(0) <= pagewr_buf_not_empty(0);
	wire_w_prot_wire_range551w(0) <= prot_wire(1);
	wire_w_prot_wire_range553w(0) <= prot_wire(2);
	wire_w_prot_wire_range556w(0) <= prot_wire(3);
	wire_w_rdid_opcode_range294w(0) <= rdid_opcode(0);
	wire_w_rdid_opcode_range239w <= rdid_opcode(7 DOWNTO 1);
	wire_w_rdummyclk_opcode_range286w(0) <= rdummyclk_opcode(0);
	wire_w_rdummyclk_opcode_range221w <= rdummyclk_opcode(7 DOWNTO 1);
	wire_w_read_opcode_range290w(0) <= read_opcode(0);
	wire_w_read_opcode_range231w <= read_opcode(7 DOWNTO 1);
	wire_w_rflagstat_opcode_range276w(0) <= rflagstat_opcode(0);
	wire_w_rflagstat_opcode_range198w <= rflagstat_opcode(7 DOWNTO 1);
	wire_w_rnvdummyclk_opcode_range282w(0) <= rnvdummyclk_opcode(0);
	wire_w_rnvdummyclk_opcode_range211w <= rnvdummyclk_opcode(7 DOWNTO 1);
	wire_w_rsid_opcode_range296w(0) <= rsid_opcode(0);
	wire_w_rsid_opcode_range242w <= rsid_opcode(7 DOWNTO 1);
	wire_w_rstat_opcode_range278w(0) <= rstat_opcode(0);
	wire_w_rstat_opcode_range202w <= rstat_opcode(7 DOWNTO 1);
	wire_w_secprot_opcode_range292w(0) <= secprot_opcode(0);
	wire_w_secprot_opcode_range234w <= secprot_opcode(7 DOWNTO 1);
	wire_w_serase_opcode_range274w(0) <= serase_opcode(0);
	wire_w_serase_opcode_range193w <= serase_opcode(7 DOWNTO 1);
	wire_w_wren_opcode_range268w(0) <= wren_opcode(0);
	wire_w_wren_opcode_range180w <= wren_opcode(7 DOWNTO 1);
	wire_w_write_opcode_range280w(0) <= write_opcode(0);
	wire_w_write_opcode_range206w <= write_opcode(7 DOWNTO 1);
	wire_w_wrvolatile_opcode_range284w(0) <= wrvolatile_opcode(0);
	wire_w_wrvolatile_opcode_range214w <= wrvolatile_opcode(7 DOWNTO 1);
	wire_addbyte_cntr_w_lg_w_q_range158w163w(0) <= wire_addbyte_cntr_w_q_range158w(0) AND wire_addbyte_cntr_w_lg_w_q_range161w162w(0);
	wire_addbyte_cntr_w_lg_w_q_range161w162w(0) <= NOT wire_addbyte_cntr_w_q_range161w(0);
	wire_addbyte_cntr_clk_en <= wire_stage_cntr_w157w(0);
	wire_stage_cntr_w157w(0) <= ((wire_stage_cntr_w_lg_w_lg_w_q_range103w106w154w(0) AND wire_w_lg_w_lg_w151w152w153w(0)) OR addr_overdie) OR end_operation;
	wire_addbyte_cntr_clock <= wire_w_lg_clkin_wire101w(0);
	wire_addbyte_cntr_sclr <= wire_w_lg_end_operation100w(0);
	wire_w_lg_end_operation100w(0) <= end_operation OR addr_overdie;
	wire_addbyte_cntr_w_q_range161w(0) <= wire_addbyte_cntr_q(0);
	wire_addbyte_cntr_w_q_range158w(0) <= wire_addbyte_cntr_q(1);
	addbyte_cntr :  a_graycounter
	  GENERIC MAP (
		WIDTH => 3
	  )
	  PORT MAP ( 
		aclr => reset,
		clk_en => wire_addbyte_cntr_clk_en,
		clock => wire_addbyte_cntr_clock,
		q => wire_addbyte_cntr_q,
		sclr => wire_addbyte_cntr_sclr
	  );
	wire_gen_cntr_w_lg_w_q_range113w114w(0) <= wire_gen_cntr_w_q_range113w(0) AND wire_gen_cntr_w_lg_w_q_range111w112w(0);
	wire_gen_cntr_w_lg_w_q_range111w112w(0) <= NOT wire_gen_cntr_w_q_range111w(0);
	wire_gen_cntr_clk_en <= wire_w_lg_w_lg_w_lg_in_operation40w41w42w(0);
	wire_w_lg_w_lg_w_lg_in_operation40w41w42w(0) <= ((in_operation AND wire_w_lg_end_ophdly39w(0)) OR do_wait_dummyclk) OR addr_overdie;
	wire_gen_cntr_sclr <= wire_w_lg_w_lg_end1_cyc_reg_in_wire43w44w(0);
	wire_w_lg_w_lg_end1_cyc_reg_in_wire43w44w(0) <= (end1_cyc_reg_in_wire OR addr_overdie) OR do_wait_dummyclk;
	wire_gen_cntr_w_q_range111w(0) <= wire_gen_cntr_q(1);
	wire_gen_cntr_w_q_range113w(0) <= wire_gen_cntr_q(2);
	gen_cntr :  a_graycounter
	  GENERIC MAP (
		WIDTH => 3
	  )
	  PORT MAP ( 
		aclr => reset,
		clk_en => wire_gen_cntr_clk_en,
		clock => clkin_wire,
		q => wire_gen_cntr_q,
		sclr => wire_gen_cntr_sclr
	  );
	wire_stage_cntr_w_lg_w332w333w(0) <= wire_stage_cntr_w332w(0) AND end_one_cycle;
	wire_stage_cntr_w332w(0) <= wire_stage_cntr_w_lg_w_lg_w_lg_w_lg_w_q_range103w106w329w330w331w(0) AND end_add_cycle;
	wire_stage_cntr_w337w(0) <= wire_stage_cntr_w_lg_w_lg_w_lg_w_lg_w_q_range103w106w334w335w336w(0) AND end_one_cycle;
	wire_stage_cntr_w_lg_w_lg_w_lg_w_lg_w_q_range103w106w329w330w331w(0) <= wire_stage_cntr_w_lg_w_lg_w_lg_w_q_range103w106w329w330w(0) AND wire_w_lg_do_read_stat52w(0);
	wire_stage_cntr_w_lg_w_lg_w_lg_w_lg_w_q_range103w106w334w335w336w(0) <= wire_stage_cntr_w_lg_w_lg_w_lg_w_q_range103w106w334w335w(0) AND wire_w_lg_do_read_stat52w(0);
	wire_stage_cntr_w_lg_w_lg_w_lg_w_lg_w_q_range103w104w105w343w344w(0) <= wire_stage_cntr_w_lg_w_lg_w_lg_w_q_range103w104w105w343w(0) AND end_one_cycle;
	wire_stage_cntr_w_lg_w_lg_w_lg_w_q_range103w108w420w421w(0) <= wire_stage_cntr_w_lg_w_lg_w_q_range103w108w420w(0) AND end_one_cyc_pos;
	wire_stage_cntr_w_lg_w_lg_w_lg_w_q_range103w106w329w330w(0) <= wire_stage_cntr_w_lg_w_lg_w_q_range103w106w329w(0) AND wire_w_lg_do_wren53w(0);
	wire_stage_cntr_w_lg_w_lg_w_lg_w_q_range103w106w354w355w(0) <= wire_stage_cntr_w_lg_w_lg_w_q_range103w106w354w(0) AND end_one_cycle;
	wire_stage_cntr_w_lg_w_lg_w_lg_w_q_range103w106w334w335w(0) <= wire_stage_cntr_w_lg_w_lg_w_q_range103w106w334w(0) AND wire_w_lg_do_wren53w(0);
	wire_stage_cntr_w_lg_w_lg_w_lg_w_q_range103w104w105w343w(0) <= wire_stage_cntr_w_lg_w_lg_w_q_range103w104w105w(0) AND wire_w_lg_do_wren342w(0);
	wire_stage_cntr_w_lg_w_lg_w_q_range103w108w420w(0) <= wire_stage_cntr_w_lg_w_q_range103w108w(0) AND end_add_cycle;
	wire_stage_cntr_w_lg_w_lg_w_q_range103w106w329w(0) <= wire_stage_cntr_w_lg_w_q_range103w106w(0) AND wire_w_lg_do_sec_erase54w(0);
	wire_stage_cntr_w_lg_w_lg_w_q_range103w106w354w(0) <= wire_stage_cntr_w_lg_w_q_range103w106w(0) AND do_read_stat;
	wire_stage_cntr_w_lg_w_lg_w_q_range103w106w334w(0) <= wire_stage_cntr_w_lg_w_q_range103w106w(0) AND do_sec_prot;
	wire_stage_cntr_w_lg_w_lg_w_q_range103w106w154w(0) <= wire_stage_cntr_w_lg_w_q_range103w106w(0) AND end_one_cyc_pos;
	wire_stage_cntr_w_lg_w_lg_w_q_range103w106w327w(0) <= wire_stage_cntr_w_lg_w_q_range103w106w(0) AND end_one_cycle;
	wire_stage_cntr_w_lg_w_lg_w_lg_w_lg_w_q_range102w107w133w134w135w(0) <= wire_stage_cntr_w_lg_w_lg_w_lg_w_q_range102w107w133w134w(0) AND end1_cyc_gen_cntr_wire;
	wire_stage_cntr_w_lg_w_lg_w_q_range102w107w133w(0) <= wire_stage_cntr_w_lg_w_q_range102w107w(0) AND wire_stage_cntr_w_lg_w_q_range103w104w(0);
	wire_stage_cntr_w_lg_w_lg_w_q_range103w104w105w(0) <= wire_stage_cntr_w_lg_w_q_range103w104w(0) AND wire_stage_cntr_w_q_range102w(0);
	wire_stage_cntr_w_lg_w_q_range103w108w(0) <= wire_stage_cntr_w_q_range103w(0) AND wire_stage_cntr_w_lg_w_q_range102w107w(0);
	wire_stage_cntr_w_lg_w_q_range103w106w(0) <= wire_stage_cntr_w_q_range103w(0) AND wire_stage_cntr_w_q_range102w(0);
	wire_stage_cntr_w_lg_w_lg_w_lg_w_q_range102w107w133w134w(0) <= NOT wire_stage_cntr_w_lg_w_lg_w_q_range102w107w133w(0);
	wire_stage_cntr_w_lg_w_q_range102w107w(0) <= NOT wire_stage_cntr_w_q_range102w(0);
	wire_stage_cntr_w_lg_w_q_range103w104w(0) <= NOT wire_stage_cntr_w_q_range103w(0);
	wire_stage_cntr_clk_en <= wire_w_lg_w_lg_w_lg_w96w97w98w99w(0);
	wire_w_lg_w_lg_w_lg_w96w97w98w99w(0) <= (((((((((((((in_operation AND end_one_cycle) AND (NOT (stage3_wire AND wire_w_lg_end_add_cycle83w(0)))) AND (NOT (stage4_wire AND wire_w_lg_end_read80w(0)))) AND (NOT (stage4_wire AND wire_w_lg_end_fast_read77w(0)))) AND (NOT ((wire_w_lg_w_lg_do_write72w73w(0) OR do_bulk_erase) AND write_prot_true))) AND (NOT wire_w_lg_do_write70w(0))) AND (NOT (stage3_wire AND st_busy_wire))) AND (NOT (wire_w_lg_do_write63w(0) AND wire_w_lg_end_pgwr_data62w(0)))) AND (NOT (stage2_wire AND do_wren))) AND (NOT (((wire_w_lg_stage3_wire55w(0) AND wire_w_lg_do_wren53w(0)) AND wire_w_lg_do_read_stat52w(0)) AND wire_w_lg_do_read_rdid51w(0)))) AND (NOT (stage3_wire AND ((do_write_volatile OR do_read_volatile) OR do_read_nonvolatile)))) OR wire_w_lg_w_lg_stage3_wire45w46w(0)) OR addr_overdie) OR end_ophdly;
	wire_stage_cntr_sclr <= wire_w_lg_end_operation100w(0);
	wire_stage_cntr_w_q_range102w(0) <= wire_stage_cntr_q(0);
	wire_stage_cntr_w_q_range103w(0) <= wire_stage_cntr_q(1);
	stage_cntr :  a_graycounter
	  GENERIC MAP (
		WIDTH => 2
	  )
	  PORT MAP ( 
		aclr => reset,
		clk_en => wire_stage_cntr_clk_en,
		clock => clkin_wire,
		q => wire_stage_cntr_q,
		sclr => wire_stage_cntr_sclr
	  );
	wire_wrstage_cntr_w_lg_w_q_range524w525w(0) <= wire_wrstage_cntr_w_q_range524w(0) AND wire_wrstage_cntr_w_lg_w_q_range522w523w(0);
	wire_wrstage_cntr_w_lg_w_q_range522w523w(0) <= NOT wire_wrstage_cntr_w_q_range522w(0);
	wire_wrstage_cntr_clk_en <= wire_w_lg_w_lg_w_lg_w_lg_w517w518w519w520w521w(0);
	wire_w_lg_w_lg_w_lg_w_lg_w517w518w519w520w521w(0) <= (wire_w_lg_w_lg_w517w518w519w(0) AND wire_w_lg_st_busy_wire127w(0)) OR clr_write_wire2;
	wire_wrstage_cntr_clock <= wire_w_lg_clkin_wire101w(0);
	wire_wrstage_cntr_w_q_range522w(0) <= wire_wrstage_cntr_q(0);
	wire_wrstage_cntr_w_q_range524w(0) <= wire_wrstage_cntr_q(1);
	wrstage_cntr :  a_graycounter
	  GENERIC MAP (
		WIDTH => 2
	  )
	  PORT MAP ( 
		aclr => reset,
		clk_en => wire_wrstage_cntr_clk_en,
		clock => wire_wrstage_cntr_clock,
		q => wire_wrstage_cntr_q,
		sclr => clr_write_wire2
	  );
	wire_cycloneii_asmiblock2_sdoin <= wire_w_lg_sdoin_wire320w(0);
	wire_w_lg_sdoin_wire320w(0) <= sdoin_wire OR datain_wire(0);
	cycloneii_asmiblock2 :  cycloneii_asmiblock
	  PORT MAP ( 
		data0out => wire_cycloneii_asmiblock2_data0out,
		dclkin => clkin_wire,
		oe => oe_wire,
		scein => scein_wire,
		sdoin => wire_cycloneii_asmiblock2_sdoin
	  );
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN add_msb_reg <= '0';
		ELSIF (clkin_wire = '0' AND clkin_wire'event) THEN 
			IF (wire_add_msb_reg_ena = '1') THEN 
				IF (clr_addmsb_wire = '1') THEN add_msb_reg <= '0';
				ELSE add_msb_reg <= addr_reg(23);
				END IF;
			END IF;
		END IF;
	END PROCESS;
	wire_add_msb_reg_ena <= ((((wire_w_lg_w_lg_w_lg_w_lg_do_read407w428w429w430w(0) AND (NOT (wire_w_lg_w_lg_do_write72w73w(0) AND wire_w_lg_do_memadd425w(0)))) AND wire_stage_cntr_q(1)) AND wire_stage_cntr_q(0)) OR clr_addmsb_wire);
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN addr_reg(0) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_addr_reg_ena(0) = '1') THEN addr_reg(0) <= wire_addr_reg_d(0);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN addr_reg(1) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_addr_reg_ena(1) = '1') THEN addr_reg(1) <= wire_addr_reg_d(1);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN addr_reg(2) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_addr_reg_ena(2) = '1') THEN addr_reg(2) <= wire_addr_reg_d(2);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN addr_reg(3) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_addr_reg_ena(3) = '1') THEN addr_reg(3) <= wire_addr_reg_d(3);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN addr_reg(4) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_addr_reg_ena(4) = '1') THEN addr_reg(4) <= wire_addr_reg_d(4);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN addr_reg(5) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_addr_reg_ena(5) = '1') THEN addr_reg(5) <= wire_addr_reg_d(5);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN addr_reg(6) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_addr_reg_ena(6) = '1') THEN addr_reg(6) <= wire_addr_reg_d(6);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN addr_reg(7) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_addr_reg_ena(7) = '1') THEN addr_reg(7) <= wire_addr_reg_d(7);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN addr_reg(8) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_addr_reg_ena(8) = '1') THEN addr_reg(8) <= wire_addr_reg_d(8);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN addr_reg(9) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_addr_reg_ena(9) = '1') THEN addr_reg(9) <= wire_addr_reg_d(9);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN addr_reg(10) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_addr_reg_ena(10) = '1') THEN addr_reg(10) <= wire_addr_reg_d(10);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN addr_reg(11) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_addr_reg_ena(11) = '1') THEN addr_reg(11) <= wire_addr_reg_d(11);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN addr_reg(12) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_addr_reg_ena(12) = '1') THEN addr_reg(12) <= wire_addr_reg_d(12);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN addr_reg(13) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_addr_reg_ena(13) = '1') THEN addr_reg(13) <= wire_addr_reg_d(13);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN addr_reg(14) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_addr_reg_ena(14) = '1') THEN addr_reg(14) <= wire_addr_reg_d(14);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN addr_reg(15) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_addr_reg_ena(15) = '1') THEN addr_reg(15) <= wire_addr_reg_d(15);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN addr_reg(16) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_addr_reg_ena(16) = '1') THEN addr_reg(16) <= wire_addr_reg_d(16);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN addr_reg(17) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_addr_reg_ena(17) = '1') THEN addr_reg(17) <= wire_addr_reg_d(17);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN addr_reg(18) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_addr_reg_ena(18) = '1') THEN addr_reg(18) <= wire_addr_reg_d(18);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN addr_reg(19) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_addr_reg_ena(19) = '1') THEN addr_reg(19) <= wire_addr_reg_d(19);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN addr_reg(20) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_addr_reg_ena(20) = '1') THEN addr_reg(20) <= wire_addr_reg_d(20);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN addr_reg(21) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_addr_reg_ena(21) = '1') THEN addr_reg(21) <= wire_addr_reg_d(21);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN addr_reg(22) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_addr_reg_ena(22) = '1') THEN addr_reg(22) <= wire_addr_reg_d(22);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN addr_reg(23) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_addr_reg_ena(23) = '1') THEN addr_reg(23) <= wire_addr_reg_d(23);
			END IF;
		END IF;
	END PROCESS;
	wire_addr_reg_d <= ( wire_w_lg_w_lg_w_lg_not_busy396w397w398w & wire_w_lg_w_lg_not_busy404w405w);
	loop43 : FOR i IN 0 TO 23 GENERATE
		wire_addr_reg_ena(i) <= wire_w_lg_w_lg_w_lg_w_lg_rden_wire412w413w414w415w(0);
	END GENERATE loop43;
	wire_addr_reg_w_q_range574w(0) <= addr_reg(16);
	wire_addr_reg_w_q_range581w(0) <= addr_reg(17);
	wire_addr_reg_w_q_range393w <= addr_reg(22 DOWNTO 0);
	wire_addr_reg_w_q_range586w(0) <= addr_reg(18);
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN asmi_opcode_reg(0) <= '0';
		ELSIF (clkin_wire = '0' AND clkin_wire'event) THEN 
			IF (wire_asmi_opcode_reg_ena(0) = '1') THEN asmi_opcode_reg(0) <= wire_asmi_opcode_reg_d(0);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN asmi_opcode_reg(1) <= '0';
		ELSIF (clkin_wire = '0' AND clkin_wire'event) THEN 
			IF (wire_asmi_opcode_reg_ena(1) = '1') THEN asmi_opcode_reg(1) <= wire_asmi_opcode_reg_d(1);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN asmi_opcode_reg(2) <= '0';
		ELSIF (clkin_wire = '0' AND clkin_wire'event) THEN 
			IF (wire_asmi_opcode_reg_ena(2) = '1') THEN asmi_opcode_reg(2) <= wire_asmi_opcode_reg_d(2);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN asmi_opcode_reg(3) <= '0';
		ELSIF (clkin_wire = '0' AND clkin_wire'event) THEN 
			IF (wire_asmi_opcode_reg_ena(3) = '1') THEN asmi_opcode_reg(3) <= wire_asmi_opcode_reg_d(3);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN asmi_opcode_reg(4) <= '0';
		ELSIF (clkin_wire = '0' AND clkin_wire'event) THEN 
			IF (wire_asmi_opcode_reg_ena(4) = '1') THEN asmi_opcode_reg(4) <= wire_asmi_opcode_reg_d(4);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN asmi_opcode_reg(5) <= '0';
		ELSIF (clkin_wire = '0' AND clkin_wire'event) THEN 
			IF (wire_asmi_opcode_reg_ena(5) = '1') THEN asmi_opcode_reg(5) <= wire_asmi_opcode_reg_d(5);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN asmi_opcode_reg(6) <= '0';
		ELSIF (clkin_wire = '0' AND clkin_wire'event) THEN 
			IF (wire_asmi_opcode_reg_ena(6) = '1') THEN asmi_opcode_reg(6) <= wire_asmi_opcode_reg_d(6);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN asmi_opcode_reg(7) <= '0';
		ELSIF (clkin_wire = '0' AND clkin_wire'event) THEN 
			IF (wire_asmi_opcode_reg_ena(7) = '1') THEN asmi_opcode_reg(7) <= wire_asmi_opcode_reg_d(7);
			END IF;
		END IF;
	END PROCESS;
	wire_asmi_opcode_reg_d <= ( wire_w_lg_w_lg_w259w260w261w & wire_w_lg_w312w313w);
	loop44 : FOR i IN 0 TO 7 GENERATE
		wire_asmi_opcode_reg_ena(i) <= wire_w_lg_load_opcode315w(0);
	END GENERATE loop44;
	wire_asmi_opcode_reg_w_q_range168w <= asmi_opcode_reg(6 DOWNTO 0);
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN busy_det_reg <= '0';
		ELSIF (clkin_wire = '0' AND clkin_wire'event) THEN busy_det_reg <= wire_w_lg_busy_wire1w(0);
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN clr_read_reg <= '0';
		ELSIF (clkin_wire = '0' AND clkin_wire'event) THEN clr_read_reg <= ((do_read_sid OR do_sec_prot) OR end_operation);
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN clr_read_reg2 <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN clr_read_reg2 <= clr_read_reg;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN clr_rstat_reg <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN clr_rstat_reg <= ((end_operation OR do_read_sid) OR do_read);
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN clr_write_reg <= '0';
		ELSIF (clkin_wire = '0' AND clkin_wire'event) THEN clr_write_reg <= ((((((wire_w_lg_w_lg_w_lg_w_lg_w530w641w642w658w659w(0) OR wire_w_lg_do_write70w(0)) OR wire_w_lg_w_lg_w655w656w657w(0)) OR do_read_sid) OR do_sec_prot) OR do_read) OR do_fast_read);
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN clr_write_reg2 <= '0';
		ELSIF (clkin_wire = '0' AND clkin_wire'event) THEN clr_write_reg2 <= clr_write_reg;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN datain_reg(0) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_datain_reg_ena(0) = '1') THEN datain_reg(0) <= wire_datain_reg_d(0);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN datain_reg(1) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_datain_reg_ena(1) = '1') THEN datain_reg(1) <= wire_datain_reg_d(1);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN datain_reg(2) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_datain_reg_ena(2) = '1') THEN datain_reg(2) <= wire_datain_reg_d(2);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN datain_reg(3) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_datain_reg_ena(3) = '1') THEN datain_reg(3) <= wire_datain_reg_d(3);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN datain_reg(4) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_datain_reg_ena(4) = '1') THEN datain_reg(4) <= wire_datain_reg_d(4);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN datain_reg(5) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_datain_reg_ena(5) = '1') THEN datain_reg(5) <= wire_datain_reg_d(5);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN datain_reg(6) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_datain_reg_ena(6) = '1') THEN datain_reg(6) <= wire_datain_reg_d(6);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN datain_reg(7) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_datain_reg_ena(7) = '1') THEN datain_reg(7) <= wire_datain_reg_d(7);
			END IF;
		END IF;
	END PROCESS;
	wire_datain_reg_d <= ( datain_reg_wire_in(7 DOWNTO 0));
	loop45 : FOR i IN 0 TO 7 GENERATE
		wire_datain_reg_ena(i) <= wire_w_lg_w_lg_wren_wire631w632w(0);
	END GENERATE loop45;
	wire_datain_reg_w_q_range614w <= datain_reg(6 DOWNTO 0);
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN do_wrmemadd_reg <= '0';
		ELSIF (clkin_wire = '0' AND clkin_wire'event) THEN do_wrmemadd_reg <= (wire_wrstage_cntr_q(1) AND wire_wrstage_cntr_q(0));
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN dvalid_reg <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_dvalid_reg_ena = '1') THEN 
				IF (wire_dvalid_reg_sclr = '1') THEN dvalid_reg <= '0';
				ELSE dvalid_reg <= (end_read_byte AND end_one_cyc_pos);
				END IF;
			END IF;
		END IF;
	END PROCESS;
	wire_dvalid_reg_ena <= wire_w_lg_do_read407w(0);
	wire_dvalid_reg_sclr <= (end_op_wire OR end_operation);
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN dvalid_reg2 <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN dvalid_reg2 <= dvalid_reg;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN end1_cyc_reg <= '0';
		ELSIF (clkin_wire = '0' AND clkin_wire'event) THEN end1_cyc_reg <= end1_cyc_reg_in_wire;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN end1_cyc_reg2 <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN end1_cyc_reg2 <= end_one_cycle;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN end_op_hdlyreg <= '0';
		ELSIF (clkin_wire = '0' AND clkin_wire'event) THEN end_op_hdlyreg <= end_operation;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN end_op_reg <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN end_op_reg <= end_op_wire;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN end_rbyte_reg <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_end_rbyte_reg_ena = '1') THEN 
				IF (wire_end_rbyte_reg_sclr = '1') THEN end_rbyte_reg <= '0';
				ELSE end_rbyte_reg <= wire_w_lg_w_lg_w_lg_do_read407w474w475w(0);
				END IF;
			END IF;
		END IF;
	END PROCESS;
	wire_end_rbyte_reg_ena <= ((wire_gen_cntr_w_lg_w_q_range113w114w(0) AND wire_gen_cntr_q(0)) OR clr_endrbyte_wire);
	wire_end_rbyte_reg_sclr <= (clr_endrbyte_wire OR addr_overdie);
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN end_read_reg <= '0';
		ELSIF (clkin_wire = '0' AND clkin_wire'event) THEN end_read_reg <= (((wire_w_lg_rden_wire492w(0) AND wire_w_lg_do_read407w(0)) AND data_valid_wire) AND end_read_byte);
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN ill_write_reg <= '0';
		ELSIF (clkin_wire = '0' AND clkin_wire'event) THEN ill_write_reg <= illegal_write_b4out_wire;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN illegal_write_prot_reg <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN illegal_write_prot_reg <= do_write;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN ncs_reg <= '0';
		ELSIF (clkin_wire = '0' AND clkin_wire'event) THEN 
			IF (ncs_reg_ena_wire = '1') THEN 
				IF (wire_ncs_reg_sclr = '1') THEN ncs_reg <= '0';
				ELSE ncs_reg <= '1';
				END IF;
			END IF;
		END IF;
	END PROCESS;
	wire_ncs_reg_sclr <= (end_operation OR addr_overdie_pos);
	wire_ncs_reg_w_lg_q380w(0) <= NOT ncs_reg;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN read_data_reg(0) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_read_data_reg_ena(0) = '1') THEN read_data_reg(0) <= wire_read_data_reg_d(0);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN read_data_reg(1) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_read_data_reg_ena(1) = '1') THEN read_data_reg(1) <= wire_read_data_reg_d(1);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN read_data_reg(2) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_read_data_reg_ena(2) = '1') THEN read_data_reg(2) <= wire_read_data_reg_d(2);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN read_data_reg(3) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_read_data_reg_ena(3) = '1') THEN read_data_reg(3) <= wire_read_data_reg_d(3);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN read_data_reg(4) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_read_data_reg_ena(4) = '1') THEN read_data_reg(4) <= wire_read_data_reg_d(4);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN read_data_reg(5) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_read_data_reg_ena(5) = '1') THEN read_data_reg(5) <= wire_read_data_reg_d(5);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN read_data_reg(6) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_read_data_reg_ena(6) = '1') THEN read_data_reg(6) <= wire_read_data_reg_d(6);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN read_data_reg(7) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_read_data_reg_ena(7) = '1') THEN read_data_reg(7) <= wire_read_data_reg_d(7);
			END IF;
		END IF;
	END PROCESS;
	wire_read_data_reg_d <= ( read_data_reg_in_wire(7 DOWNTO 0));
	loop46 : FOR i IN 0 TO 7 GENERATE
		wire_read_data_reg_ena(i) <= wire_w477w(0);
	END GENERATE loop46;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN read_dout_reg(0) <= '0';
		ELSIF (clkin_wire = '0' AND clkin_wire'event) THEN 
			IF (wire_read_dout_reg_ena(0) = '1') THEN read_dout_reg(0) <= wire_read_dout_reg_d(0);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN read_dout_reg(1) <= '0';
		ELSIF (clkin_wire = '0' AND clkin_wire'event) THEN 
			IF (wire_read_dout_reg_ena(1) = '1') THEN read_dout_reg(1) <= wire_read_dout_reg_d(1);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN read_dout_reg(2) <= '0';
		ELSIF (clkin_wire = '0' AND clkin_wire'event) THEN 
			IF (wire_read_dout_reg_ena(2) = '1') THEN read_dout_reg(2) <= wire_read_dout_reg_d(2);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN read_dout_reg(3) <= '0';
		ELSIF (clkin_wire = '0' AND clkin_wire'event) THEN 
			IF (wire_read_dout_reg_ena(3) = '1') THEN read_dout_reg(3) <= wire_read_dout_reg_d(3);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN read_dout_reg(4) <= '0';
		ELSIF (clkin_wire = '0' AND clkin_wire'event) THEN 
			IF (wire_read_dout_reg_ena(4) = '1') THEN read_dout_reg(4) <= wire_read_dout_reg_d(4);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN read_dout_reg(5) <= '0';
		ELSIF (clkin_wire = '0' AND clkin_wire'event) THEN 
			IF (wire_read_dout_reg_ena(5) = '1') THEN read_dout_reg(5) <= wire_read_dout_reg_d(5);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN read_dout_reg(6) <= '0';
		ELSIF (clkin_wire = '0' AND clkin_wire'event) THEN 
			IF (wire_read_dout_reg_ena(6) = '1') THEN read_dout_reg(6) <= wire_read_dout_reg_d(6);
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN read_dout_reg(7) <= '0';
		ELSIF (clkin_wire = '0' AND clkin_wire'event) THEN 
			IF (wire_read_dout_reg_ena(7) = '1') THEN read_dout_reg(7) <= wire_read_dout_reg_d(7);
			END IF;
		END IF;
	END PROCESS;
	wire_read_dout_reg_d <= ( read_dout_reg(6 DOWNTO 0) & wire_w_lg_data0out_wire446w);
	loop47 : FOR i IN 0 TO 7 GENERATE
		wire_read_dout_reg_ena(i) <= wire_w_lg_w_lg_stage4_wire443w444w(0);
	END GENERATE loop47;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN read_reg <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_read_reg_ena = '1') THEN 
				IF (clr_read_wire = '1') THEN read_reg <= '0';
				ELSE read_reg <= read;
				END IF;
			END IF;
		END IF;
	END PROCESS;
	wire_read_reg_ena <= ((wire_w_lg_busy_wire1w(0) AND rden_wire) OR clr_read_wire);
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN shift_op_reg <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN shift_op_reg <= wire_stage_cntr_w_lg_w_lg_w_q_range103w104w105w(0);
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN stage2_reg <= '0';
		ELSIF (clkin_wire = '0' AND clkin_wire'event) THEN stage2_reg <= wire_stage_cntr_w_lg_w_lg_w_q_range103w104w105w(0);
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN stage3_dly_reg <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN stage3_dly_reg <= wire_stage_cntr_w_lg_w_q_range103w106w(0);
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN stage3_reg <= '0';
		ELSIF (clkin_wire = '0' AND clkin_wire'event) THEN stage3_reg <= wire_stage_cntr_w_lg_w_q_range103w106w(0);
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN stage4_reg <= '0';
		ELSIF (clkin_wire = '0' AND clkin_wire'event) THEN stage4_reg <= wire_stage_cntr_w_lg_w_q_range103w108w(0);
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN start_wrpoll_reg <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_start_wrpoll_reg_ena = '1') THEN 
				IF (clr_write_wire = '1') THEN start_wrpoll_reg <= '0';
				ELSE start_wrpoll_reg <= wire_stage_cntr_w_lg_w_q_range103w106w(0);
				END IF;
			END IF;
		END IF;
	END PROCESS;
	wire_start_wrpoll_reg_ena <= (((do_write_rstat AND do_polling) AND end_one_cycle) OR clr_write_wire);
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN start_wrpoll_reg2 <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
				IF (clr_write_wire = '1') THEN start_wrpoll_reg2 <= '0';
				ELSE start_wrpoll_reg2 <= start_wrpoll_reg;
				END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN statreg_int(0) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_statreg_int_ena(0) = '1') THEN 
				IF (clr_rstat_wire = '1') THEN statreg_int(0) <= '0';
				ELSE statreg_int(0) <= wire_statreg_int_d(0);
				END IF;
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN statreg_int(1) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_statreg_int_ena(1) = '1') THEN 
				IF (clr_rstat_wire = '1') THEN statreg_int(1) <= '0';
				ELSE statreg_int(1) <= wire_statreg_int_d(1);
				END IF;
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN statreg_int(2) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_statreg_int_ena(2) = '1') THEN 
				IF (clr_rstat_wire = '1') THEN statreg_int(2) <= '0';
				ELSE statreg_int(2) <= wire_statreg_int_d(2);
				END IF;
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN statreg_int(3) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_statreg_int_ena(3) = '1') THEN 
				IF (clr_rstat_wire = '1') THEN statreg_int(3) <= '0';
				ELSE statreg_int(3) <= wire_statreg_int_d(3);
				END IF;
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN statreg_int(4) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_statreg_int_ena(4) = '1') THEN 
				IF (clr_rstat_wire = '1') THEN statreg_int(4) <= '0';
				ELSE statreg_int(4) <= wire_statreg_int_d(4);
				END IF;
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN statreg_int(5) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_statreg_int_ena(5) = '1') THEN 
				IF (clr_rstat_wire = '1') THEN statreg_int(5) <= '0';
				ELSE statreg_int(5) <= wire_statreg_int_d(5);
				END IF;
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN statreg_int(6) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_statreg_int_ena(6) = '1') THEN 
				IF (clr_rstat_wire = '1') THEN statreg_int(6) <= '0';
				ELSE statreg_int(6) <= wire_statreg_int_d(6);
				END IF;
			END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN statreg_int(7) <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_statreg_int_ena(7) = '1') THEN 
				IF (clr_rstat_wire = '1') THEN statreg_int(7) <= '0';
				ELSE statreg_int(7) <= wire_statreg_int_d(7);
				END IF;
			END IF;
		END IF;
	END PROCESS;
	wire_statreg_int_d <= ( read_dout_reg(7 DOWNTO 0));
	loop48 : FOR i IN 0 TO 7 GENERATE
		wire_statreg_int_ena(i) <= wire_w_lg_w_lg_w_lg_end_operation502w503w504w(0);
	END GENERATE loop48;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN write_prot_reg <= '0';
		ELSIF (clkin_wire = '0' AND clkin_wire'event) THEN 
			IF (wire_write_prot_reg_ena = '1') THEN 
				IF (clr_write_wire = '1') THEN write_prot_reg <= '0';
				ELSE write_prot_reg <= (((wire_w_lg_do_write72w(0) AND (NOT mask_prot_comp_ntb(2))) AND (NOT prot_wire(0))) OR be_write_prot);
				END IF;
			END IF;
		END IF;
	END PROCESS;
	wire_write_prot_reg_ena <= ((((wire_w_lg_w_lg_w_lg_do_sec_erase532w533w534w(0) AND (NOT wire_wrstage_cntr_q(1))) AND wire_wrstage_cntr_q(0)) AND end_ophdly) OR clr_write_wire);
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN write_prot_reg2 <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN write_prot_reg2 <= write_prot_reg;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN write_reg <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
			IF (wire_write_reg_ena = '1') THEN 
				IF (clr_write_wire = '1') THEN write_reg <= '0';
				ELSE write_reg <= write;
				END IF;
			END IF;
		END IF;
	END PROCESS;
	wire_write_reg_ena <= ((wire_w_lg_busy_wire1w(0) AND wren_wire) OR clr_write_wire);
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN write_rstat_reg <= '0';
		ELSIF (clkin_wire = '1' AND clkin_wire'event) THEN 
				IF (clr_write_wire = '1') THEN write_rstat_reg <= '0';
				ELSE write_rstat_reg <= (wire_w530w(0) AND (((NOT wire_wrstage_cntr_q(1)) AND wire_wrstage_cntr_w_lg_w_q_range522w523w(0)) OR wire_wrstage_cntr_w_lg_w_q_range524w525w(0)));
				END IF;
		END IF;
	END PROCESS;
	PROCESS (clkin_wire, reset)
	BEGIN
		IF (reset = '1') THEN wrsdoin_reg <= '0';
		ELSIF (clkin_wire = '0' AND clkin_wire'event) THEN 
				IF (end_operation = '1') THEN wrsdoin_reg <= '0';
				ELSE wrsdoin_reg <= datain_reg(7);
				END IF;
		END IF;
	END PROCESS;
	wire_mux211_dataout <= end_add_cycle_mux_datab_wire WHEN do_fast_read = '1'  ELSE wire_addbyte_cntr_w_lg_w_q_range158w163w(0);

 END RTL; --ALTASMI_altasmi_parallel_3kj2
--VALID FILE


LIBRARY ieee;
USE ieee.std_logic_1164.all;

ENTITY ALTASMI IS
	PORT
	(
		addr		: IN STD_LOGIC_VECTOR (23 DOWNTO 0);
		clkin		: IN STD_LOGIC ;
		datain		: IN STD_LOGIC_VECTOR (7 DOWNTO 0);
		rden		: IN STD_LOGIC ;
		read		: IN STD_LOGIC ;
		reset		: IN STD_LOGIC ;
		wren		: IN STD_LOGIC ;
		write		: IN STD_LOGIC ;
		busy		: OUT STD_LOGIC ;
		data_valid		: OUT STD_LOGIC ;
		dataout		: OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
		illegal_write		: OUT STD_LOGIC 
	);
END ALTASMI;


ARCHITECTURE RTL OF altasmi IS

	ATTRIBUTE synthesis_clearbox: natural;
	ATTRIBUTE synthesis_clearbox OF RTL: ARCHITECTURE IS 2;
	ATTRIBUTE clearbox_macroname: string;
	ATTRIBUTE clearbox_macroname OF RTL: ARCHITECTURE IS "ALTASMI_PARALLEL";
	ATTRIBUTE clearbox_defparam: string;
	ATTRIBUTE clearbox_defparam OF RTL: ARCHITECTURE IS "data_width=STANDARD;epcs_type=EPCS4;intended_device_family=Cyclone III;lpm_hint=UNUSED;lpm_type=altasmi_parallel;page_size=1;port_bulk_erase=PORT_UNUSED;port_die_erase=PORT_UNUSED;port_en4b_addr=PORT_UNUSED;port_ex4b_addr=PORT_UNUSED;port_fast_read=PORT_UNUSED;port_illegal_erase=PORT_UNUSED;port_illegal_write=PORT_USED;port_rdid_out=PORT_UNUSED;port_read_address=PORT_UNUSED;port_read_dummyclk=PORT_UNUSED;port_read_rdid=PORT_UNUSED;port_read_sid=PORT_UNUSED;port_read_status=PORT_UNUSED;port_sector_erase=PORT_UNUSED;port_sector_protect=PORT_UNUSED;port_shift_bytes=PORT_UNUSED;port_wren=PORT_USED;port_write=PORT_USED;use_asmiblock=ON;use_eab=ON;write_dummy_clk=0;";
	SIGNAL sub_wire0	: STD_LOGIC ;
	SIGNAL sub_wire1	: STD_LOGIC ;
	SIGNAL sub_wire2	: STD_LOGIC ;
	SIGNAL sub_wire3	: STD_LOGIC_VECTOR (7 DOWNTO 0);



	COMPONENT ALTASMI_altasmi_parallel_3kj2
	PORT (
			illegal_write	: OUT STD_LOGIC ;
			read	: IN STD_LOGIC ;
			wren	: IN STD_LOGIC ;
			addr	: IN STD_LOGIC_VECTOR (23 DOWNTO 0);
			busy	: OUT STD_LOGIC ;
			clkin	: IN STD_LOGIC ;
			data_valid	: OUT STD_LOGIC ;
			datain	: IN STD_LOGIC_VECTOR (7 DOWNTO 0);
			rden	: IN STD_LOGIC ;
			reset	: IN STD_LOGIC ;
			write	: IN STD_LOGIC ;
			dataout	: OUT STD_LOGIC_VECTOR (7 DOWNTO 0)
	);
	END COMPONENT;

BEGIN
	illegal_write    <= sub_wire0;
	busy    <= sub_wire1;
	data_valid    <= sub_wire2;
	dataout    <= sub_wire3(7 DOWNTO 0);

	ALTASMI_altasmi_parallel_3kj2_component : ALTASMI_altasmi_parallel_3kj2
	PORT MAP (
		read => read,
		wren => wren,
		addr => addr,
		clkin => clkin,
		datain => datain,
		rden => rden,
		reset => reset,
		write => write,
		illegal_write => sub_wire0,
		busy => sub_wire1,
		data_valid => sub_wire2,
		dataout => sub_wire3
	);



END RTL;

-- ============================================================
-- CNX file retrieval info
-- ============================================================
-- Retrieval info: LIBRARY: altera_mf altera_mf.altera_mf_components.all
-- Retrieval info: PRIVATE: INTENDED_DEVICE_FAMILY STRING "Cyclone III"
-- Retrieval info: CONSTANT: DATA_WIDTH STRING "STANDARD"
-- Retrieval info: CONSTANT: EPCS_TYPE STRING "EPCS4"
-- Retrieval info: CONSTANT: INTENDED_DEVICE_FAMILY STRING "Cyclone III"
-- Retrieval info: CONSTANT: LPM_HINT STRING "UNUSED"
-- Retrieval info: CONSTANT: LPM_TYPE STRING "altasmi_parallel"
-- Retrieval info: CONSTANT: PAGE_SIZE NUMERIC "1"
-- Retrieval info: CONSTANT: PORT_BULK_ERASE STRING "PORT_UNUSED"
-- Retrieval info: CONSTANT: PORT_DIE_ERASE STRING "PORT_UNUSED"
-- Retrieval info: CONSTANT: PORT_EN4B_ADDR STRING "PORT_UNUSED"
-- Retrieval info: CONSTANT: PORT_EX4B_ADDR STRING "PORT_UNUSED"
-- Retrieval info: CONSTANT: PORT_FAST_READ STRING "PORT_UNUSED"
-- Retrieval info: CONSTANT: PORT_ILLEGAL_ERASE STRING "PORT_UNUSED"
-- Retrieval info: CONSTANT: PORT_ILLEGAL_WRITE STRING "PORT_USED"
-- Retrieval info: CONSTANT: PORT_RDID_OUT STRING "PORT_UNUSED"
-- Retrieval info: CONSTANT: PORT_READ_ADDRESS STRING "PORT_UNUSED"
-- Retrieval info: CONSTANT: PORT_READ_DUMMYCLK STRING "PORT_UNUSED"
-- Retrieval info: CONSTANT: PORT_READ_RDID STRING "PORT_UNUSED"
-- Retrieval info: CONSTANT: PORT_READ_SID STRING "PORT_UNUSED"
-- Retrieval info: CONSTANT: PORT_READ_STATUS STRING "PORT_UNUSED"
-- Retrieval info: CONSTANT: PORT_SECTOR_ERASE STRING "PORT_UNUSED"
-- Retrieval info: CONSTANT: PORT_SECTOR_PROTECT STRING "PORT_UNUSED"
-- Retrieval info: CONSTANT: PORT_SHIFT_BYTES STRING "PORT_UNUSED"
-- Retrieval info: CONSTANT: PORT_WREN STRING "PORT_USED"
-- Retrieval info: CONSTANT: PORT_WRITE STRING "PORT_USED"
-- Retrieval info: CONSTANT: USE_ASMIBLOCK STRING "ON"
-- Retrieval info: CONSTANT: USE_EAB STRING "ON"
-- Retrieval info: CONSTANT: WRITE_DUMMY_CLK NUMERIC "0"
-- Retrieval info: USED_PORT: addr 0 0 24 0 INPUT NODEFVAL "addr[23..0]"
-- Retrieval info: CONNECT: @addr 0 0 24 0 addr 0 0 24 0
-- Retrieval info: USED_PORT: busy 0 0 0 0 OUTPUT NODEFVAL "busy"
-- Retrieval info: CONNECT: busy 0 0 0 0 @busy 0 0 0 0
-- Retrieval info: USED_PORT: clkin 0 0 0 0 INPUT NODEFVAL "clkin"
-- Retrieval info: CONNECT: @clkin 0 0 0 0 clkin 0 0 0 0
-- Retrieval info: USED_PORT: data_valid 0 0 0 0 OUTPUT NODEFVAL "data_valid"
-- Retrieval info: CONNECT: data_valid 0 0 0 0 @data_valid 0 0 0 0
-- Retrieval info: USED_PORT: datain 0 0 8 0 INPUT NODEFVAL "datain[7..0]"
-- Retrieval info: CONNECT: @datain 0 0 8 0 datain 0 0 8 0
-- Retrieval info: USED_PORT: dataout 0 0 8 0 OUTPUT NODEFVAL "dataout[7..0]"
-- Retrieval info: CONNECT: dataout 0 0 8 0 @dataout 0 0 8 0
-- Retrieval info: USED_PORT: illegal_write 0 0 0 0 OUTPUT NODEFVAL "illegal_write"
-- Retrieval info: CONNECT: illegal_write 0 0 0 0 @illegal_write 0 0 0 0
-- Retrieval info: USED_PORT: rden 0 0 0 0 INPUT NODEFVAL "rden"
-- Retrieval info: CONNECT: @rden 0 0 0 0 rden 0 0 0 0
-- Retrieval info: USED_PORT: read 0 0 0 0 INPUT NODEFVAL "read"
-- Retrieval info: CONNECT: @read 0 0 0 0 read 0 0 0 0
-- Retrieval info: USED_PORT: reset 0 0 0 0 INPUT NODEFVAL "reset"
-- Retrieval info: CONNECT: @reset 0 0 0 0 reset 0 0 0 0
-- Retrieval info: USED_PORT: wren 0 0 0 0 INPUT NODEFVAL "wren"
-- Retrieval info: CONNECT: @wren 0 0 0 0 wren 0 0 0 0
-- Retrieval info: USED_PORT: write 0 0 0 0 INPUT NODEFVAL "write"
-- Retrieval info: CONNECT: @write 0 0 0 0 write 0 0 0 0
-- Retrieval info: GEN_FILE: TYPE_NORMAL ALTASMI.vhd TRUE FALSE
-- Retrieval info: GEN_FILE: TYPE_NORMAL ALTASMI.qip TRUE FALSE
-- Retrieval info: GEN_FILE: TYPE_NORMAL ALTASMI.bsf TRUE TRUE
-- Retrieval info: GEN_FILE: TYPE_NORMAL ALTASMI_inst.vhd TRUE TRUE
-- Retrieval info: GEN_FILE: TYPE_NORMAL ALTASMI.inc FALSE TRUE
-- Retrieval info: GEN_FILE: TYPE_NORMAL ALTASMI.cmp TRUE TRUE
